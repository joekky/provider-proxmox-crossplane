//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromInitParameters) DeepCopyInto(out *CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromInitParameters.
func (in *CdromInitParameters) DeepCopy() *CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromObservation) DeepCopyInto(out *CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromObservation.
func (in *CdromObservation) DeepCopy() *CdromObservation {
	if in == nil {
		return nil
	}
	out := new(CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromParameters) DeepCopyInto(out *CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromParameters.
func (in *CdromParameters) DeepCopy() *CdromParameters {
	if in == nil {
		return nil
	}
	out := new(CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudinitInitParameters) DeepCopyInto(out *CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudinitInitParameters.
func (in *CloudinitInitParameters) DeepCopy() *CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudinitObservation) DeepCopyInto(out *CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudinitObservation.
func (in *CloudinitObservation) DeepCopy() *CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudinitParameters) DeepCopyInto(out *CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudinitParameters.
func (in *CloudinitParameters) DeepCopy() *CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters) DeepCopyInto(out *DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.DiskFile != nil {
		in, out := &in.DiskFile, &out.DiskFile
		*out = new(string)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters.
func (in *DiskInitParameters) DeepCopy() *DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.DiskFile != nil {
		in, out := &in.DiskFile, &out.DiskFile
		*out = new(string)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.DiskFile != nil {
		in, out := &in.DiskFile, &out.DiskFile
		*out = new(string)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisksInitParameters) DeepCopyInto(out *DisksInitParameters) {
	*out = *in
	if in.Ide != nil {
		in, out := &in.Ide, &out.Ide
		*out = make([]IdeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata != nil {
		in, out := &in.Sata, &out.Sata
		*out = make([]SataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi != nil {
		in, out := &in.Scsi, &out.Scsi
		*out = make([]ScsiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio != nil {
		in, out := &in.Virtio, &out.Virtio
		*out = make([]VirtioInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisksInitParameters.
func (in *DisksInitParameters) DeepCopy() *DisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(DisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisksObservation) DeepCopyInto(out *DisksObservation) {
	*out = *in
	if in.Ide != nil {
		in, out := &in.Ide, &out.Ide
		*out = make([]IdeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata != nil {
		in, out := &in.Sata, &out.Sata
		*out = make([]SataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi != nil {
		in, out := &in.Scsi, &out.Scsi
		*out = make([]ScsiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio != nil {
		in, out := &in.Virtio, &out.Virtio
		*out = make([]VirtioObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisksObservation.
func (in *DisksObservation) DeepCopy() *DisksObservation {
	if in == nil {
		return nil
	}
	out := new(DisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisksParameters) DeepCopyInto(out *DisksParameters) {
	*out = *in
	if in.Ide != nil {
		in, out := &in.Ide, &out.Ide
		*out = make([]IdeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata != nil {
		in, out := &in.Sata, &out.Sata
		*out = make([]SataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi != nil {
		in, out := &in.Scsi, &out.Scsi
		*out = make([]ScsiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio != nil {
		in, out := &in.Virtio, &out.Virtio
		*out = make([]VirtioParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisksParameters.
func (in *DisksParameters) DeepCopy() *DisksParameters {
	if in == nil {
		return nil
	}
	out := new(DisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfidiskInitParameters) DeepCopyInto(out *EfidiskInitParameters) {
	*out = *in
	if in.Efitype != nil {
		in, out := &in.Efitype, &out.Efitype
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfidiskInitParameters.
func (in *EfidiskInitParameters) DeepCopy() *EfidiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(EfidiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfidiskObservation) DeepCopyInto(out *EfidiskObservation) {
	*out = *in
	if in.Efitype != nil {
		in, out := &in.Efitype, &out.Efitype
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfidiskObservation.
func (in *EfidiskObservation) DeepCopy() *EfidiskObservation {
	if in == nil {
		return nil
	}
	out := new(EfidiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfidiskParameters) DeepCopyInto(out *EfidiskParameters) {
	*out = *in
	if in.Efitype != nil {
		in, out := &in.Efitype, &out.Efitype
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfidiskParameters.
func (in *EfidiskParameters) DeepCopy() *EfidiskParameters {
	if in == nil {
		return nil
	}
	out := new(EfidiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciInitParameters) DeepCopyInto(out *HostpciInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(float64)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciInitParameters.
func (in *HostpciInitParameters) DeepCopy() *HostpciInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostpciInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciObservation) DeepCopyInto(out *HostpciObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(float64)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciObservation.
func (in *HostpciObservation) DeepCopy() *HostpciObservation {
	if in == nil {
		return nil
	}
	out := new(HostpciObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciParameters) DeepCopyInto(out *HostpciParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(float64)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciParameters.
func (in *HostpciParameters) DeepCopy() *HostpciParameters {
	if in == nil {
		return nil
	}
	out := new(HostpciParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0DiskInitParameters) DeepCopyInto(out *Ide0DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0DiskInitParameters.
func (in *Ide0DiskInitParameters) DeepCopy() *Ide0DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide0DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0DiskObservation) DeepCopyInto(out *Ide0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0DiskObservation.
func (in *Ide0DiskObservation) DeepCopy() *Ide0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0DiskParameters) DeepCopyInto(out *Ide0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0DiskParameters.
func (in *Ide0DiskParameters) DeepCopy() *Ide0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0InitParameters) DeepCopyInto(out *Ide0InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide0DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0InitParameters.
func (in *Ide0InitParameters) DeepCopy() *Ide0InitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide0InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0Observation) DeepCopyInto(out *Ide0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0Observation.
func (in *Ide0Observation) DeepCopy() *Ide0Observation {
	if in == nil {
		return nil
	}
	out := new(Ide0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide0Parameters) DeepCopyInto(out *Ide0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide0Parameters.
func (in *Ide0Parameters) DeepCopy() *Ide0Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CdromInitParameters) DeepCopyInto(out *Ide1CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CdromInitParameters.
func (in *Ide1CdromInitParameters) DeepCopy() *Ide1CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CdromObservation) DeepCopyInto(out *Ide1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CdromObservation.
func (in *Ide1CdromObservation) DeepCopy() *Ide1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CdromParameters) DeepCopyInto(out *Ide1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CdromParameters.
func (in *Ide1CdromParameters) DeepCopy() *Ide1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CloudinitInitParameters) DeepCopyInto(out *Ide1CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CloudinitInitParameters.
func (in *Ide1CloudinitInitParameters) DeepCopy() *Ide1CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CloudinitObservation) DeepCopyInto(out *Ide1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CloudinitObservation.
func (in *Ide1CloudinitObservation) DeepCopy() *Ide1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1CloudinitParameters) DeepCopyInto(out *Ide1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1CloudinitParameters.
func (in *Ide1CloudinitParameters) DeepCopy() *Ide1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1DiskInitParameters) DeepCopyInto(out *Ide1DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1DiskInitParameters.
func (in *Ide1DiskInitParameters) DeepCopy() *Ide1DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1DiskObservation) DeepCopyInto(out *Ide1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1DiskObservation.
func (in *Ide1DiskObservation) DeepCopy() *Ide1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1DiskParameters) DeepCopyInto(out *Ide1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1DiskParameters.
func (in *Ide1DiskParameters) DeepCopy() *Ide1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1InitParameters) DeepCopyInto(out *Ide1InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide1CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide1CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide1DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide1PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1InitParameters.
func (in *Ide1InitParameters) DeepCopy() *Ide1InitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1Observation) DeepCopyInto(out *Ide1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1Observation.
func (in *Ide1Observation) DeepCopy() *Ide1Observation {
	if in == nil {
		return nil
	}
	out := new(Ide1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1Parameters) DeepCopyInto(out *Ide1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1Parameters.
func (in *Ide1Parameters) DeepCopy() *Ide1Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1PassthroughInitParameters) DeepCopyInto(out *Ide1PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1PassthroughInitParameters.
func (in *Ide1PassthroughInitParameters) DeepCopy() *Ide1PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1PassthroughObservation) DeepCopyInto(out *Ide1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1PassthroughObservation.
func (in *Ide1PassthroughObservation) DeepCopy() *Ide1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide1PassthroughParameters) DeepCopyInto(out *Ide1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide1PassthroughParameters.
func (in *Ide1PassthroughParameters) DeepCopy() *Ide1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CdromInitParameters) DeepCopyInto(out *Ide2CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CdromInitParameters.
func (in *Ide2CdromInitParameters) DeepCopy() *Ide2CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CdromObservation) DeepCopyInto(out *Ide2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CdromObservation.
func (in *Ide2CdromObservation) DeepCopy() *Ide2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CdromParameters) DeepCopyInto(out *Ide2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CdromParameters.
func (in *Ide2CdromParameters) DeepCopy() *Ide2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CloudinitInitParameters) DeepCopyInto(out *Ide2CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CloudinitInitParameters.
func (in *Ide2CloudinitInitParameters) DeepCopy() *Ide2CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CloudinitObservation) DeepCopyInto(out *Ide2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CloudinitObservation.
func (in *Ide2CloudinitObservation) DeepCopy() *Ide2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2CloudinitParameters) DeepCopyInto(out *Ide2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2CloudinitParameters.
func (in *Ide2CloudinitParameters) DeepCopy() *Ide2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2DiskInitParameters) DeepCopyInto(out *Ide2DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2DiskInitParameters.
func (in *Ide2DiskInitParameters) DeepCopy() *Ide2DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2DiskObservation) DeepCopyInto(out *Ide2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2DiskObservation.
func (in *Ide2DiskObservation) DeepCopy() *Ide2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2DiskParameters) DeepCopyInto(out *Ide2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2DiskParameters.
func (in *Ide2DiskParameters) DeepCopy() *Ide2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2InitParameters) DeepCopyInto(out *Ide2InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide2CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide2CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide2DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide2PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2InitParameters.
func (in *Ide2InitParameters) DeepCopy() *Ide2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2Observation) DeepCopyInto(out *Ide2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2Observation.
func (in *Ide2Observation) DeepCopy() *Ide2Observation {
	if in == nil {
		return nil
	}
	out := new(Ide2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2Parameters) DeepCopyInto(out *Ide2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2Parameters.
func (in *Ide2Parameters) DeepCopy() *Ide2Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2PassthroughInitParameters) DeepCopyInto(out *Ide2PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2PassthroughInitParameters.
func (in *Ide2PassthroughInitParameters) DeepCopy() *Ide2PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2PassthroughObservation) DeepCopyInto(out *Ide2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2PassthroughObservation.
func (in *Ide2PassthroughObservation) DeepCopy() *Ide2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide2PassthroughParameters) DeepCopyInto(out *Ide2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide2PassthroughParameters.
func (in *Ide2PassthroughParameters) DeepCopy() *Ide2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CdromInitParameters) DeepCopyInto(out *Ide3CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CdromInitParameters.
func (in *Ide3CdromInitParameters) DeepCopy() *Ide3CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CdromObservation) DeepCopyInto(out *Ide3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CdromObservation.
func (in *Ide3CdromObservation) DeepCopy() *Ide3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CdromParameters) DeepCopyInto(out *Ide3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CdromParameters.
func (in *Ide3CdromParameters) DeepCopy() *Ide3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CloudinitInitParameters) DeepCopyInto(out *Ide3CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CloudinitInitParameters.
func (in *Ide3CloudinitInitParameters) DeepCopy() *Ide3CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CloudinitObservation) DeepCopyInto(out *Ide3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CloudinitObservation.
func (in *Ide3CloudinitObservation) DeepCopy() *Ide3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3CloudinitParameters) DeepCopyInto(out *Ide3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3CloudinitParameters.
func (in *Ide3CloudinitParameters) DeepCopy() *Ide3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3DiskInitParameters) DeepCopyInto(out *Ide3DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3DiskInitParameters.
func (in *Ide3DiskInitParameters) DeepCopy() *Ide3DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3DiskObservation) DeepCopyInto(out *Ide3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3DiskObservation.
func (in *Ide3DiskObservation) DeepCopy() *Ide3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3DiskParameters) DeepCopyInto(out *Ide3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3DiskParameters.
func (in *Ide3DiskParameters) DeepCopy() *Ide3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3InitParameters) DeepCopyInto(out *Ide3InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide3CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide3CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide3DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide3PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3InitParameters.
func (in *Ide3InitParameters) DeepCopy() *Ide3InitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3Observation) DeepCopyInto(out *Ide3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3Observation.
func (in *Ide3Observation) DeepCopy() *Ide3Observation {
	if in == nil {
		return nil
	}
	out := new(Ide3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3Parameters) DeepCopyInto(out *Ide3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Ide3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Ide3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Ide3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Ide3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3Parameters.
func (in *Ide3Parameters) DeepCopy() *Ide3Parameters {
	if in == nil {
		return nil
	}
	out := new(Ide3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3PassthroughInitParameters) DeepCopyInto(out *Ide3PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3PassthroughInitParameters.
func (in *Ide3PassthroughInitParameters) DeepCopy() *Ide3PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3PassthroughObservation) DeepCopyInto(out *Ide3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3PassthroughObservation.
func (in *Ide3PassthroughObservation) DeepCopy() *Ide3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Ide3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ide3PassthroughParameters) DeepCopyInto(out *Ide3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ide3PassthroughParameters.
func (in *Ide3PassthroughParameters) DeepCopy() *Ide3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Ide3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdeInitParameters) DeepCopyInto(out *IdeInitParameters) {
	*out = *in
	if in.Ide0 != nil {
		in, out := &in.Ide0, &out.Ide0
		*out = make([]Ide0InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide1 != nil {
		in, out := &in.Ide1, &out.Ide1
		*out = make([]Ide1InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide2 != nil {
		in, out := &in.Ide2, &out.Ide2
		*out = make([]Ide2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide3 != nil {
		in, out := &in.Ide3, &out.Ide3
		*out = make([]Ide3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdeInitParameters.
func (in *IdeInitParameters) DeepCopy() *IdeInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdeObservation) DeepCopyInto(out *IdeObservation) {
	*out = *in
	if in.Ide0 != nil {
		in, out := &in.Ide0, &out.Ide0
		*out = make([]Ide0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide1 != nil {
		in, out := &in.Ide1, &out.Ide1
		*out = make([]Ide1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide2 != nil {
		in, out := &in.Ide2, &out.Ide2
		*out = make([]Ide2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide3 != nil {
		in, out := &in.Ide3, &out.Ide3
		*out = make([]Ide3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdeObservation.
func (in *IdeObservation) DeepCopy() *IdeObservation {
	if in == nil {
		return nil
	}
	out := new(IdeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdeParameters) DeepCopyInto(out *IdeParameters) {
	*out = *in
	if in.Ide0 != nil {
		in, out := &in.Ide0, &out.Ide0
		*out = make([]Ide0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide1 != nil {
		in, out := &in.Ide1, &out.Ide1
		*out = make([]Ide1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide2 != nil {
		in, out := &in.Ide2, &out.Ide2
		*out = make([]Ide2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ide3 != nil {
		in, out := &in.Ide3, &out.Ide3
		*out = make([]Ide3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdeParameters.
func (in *IdeParameters) DeepCopy() *IdeParameters {
	if in == nil {
		return nil
	}
	out := new(IdeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.LinkDown != nil {
		in, out := &in.LinkDown, &out.LinkDown
		*out = new(bool)
		**out = **in
	}
	if in.Macaddr != nil {
		in, out := &in.Macaddr, &out.Macaddr
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.Rate != nil {
		in, out := &in.Rate, &out.Rate
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.LinkDown != nil {
		in, out := &in.LinkDown, &out.LinkDown
		*out = new(bool)
		**out = **in
	}
	if in.Macaddr != nil {
		in, out := &in.Macaddr, &out.Macaddr
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.Rate != nil {
		in, out := &in.Rate, &out.Rate
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.LinkDown != nil {
		in, out := &in.LinkDown, &out.LinkDown
		*out = new(bool)
		**out = **in
	}
	if in.Macaddr != nil {
		in, out := &in.Macaddr, &out.Macaddr
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.Rate != nil {
		in, out := &in.Rate, &out.Rate
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PassthroughInitParameters) DeepCopyInto(out *PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PassthroughInitParameters.
func (in *PassthroughInitParameters) DeepCopy() *PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PassthroughObservation) DeepCopyInto(out *PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PassthroughObservation.
func (in *PassthroughObservation) DeepCopy() *PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PassthroughParameters) DeepCopyInto(out *PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PassthroughParameters.
func (in *PassthroughParameters) DeepCopy() *PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Qemu) DeepCopyInto(out *Qemu) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Qemu.
func (in *Qemu) DeepCopy() *Qemu {
	if in == nil {
		return nil
	}
	out := new(Qemu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Qemu) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuInitParameters) DeepCopyInto(out *QemuInitParameters) {
	*out = *in
	if in.AdditionalWait != nil {
		in, out := &in.AdditionalWait, &out.AdditionalWait
		*out = new(float64)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(float64)
		**out = **in
	}
	if in.AgentTimeout != nil {
		in, out := &in.AgentTimeout, &out.AgentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = new(string)
		**out = **in
	}
	if in.AutomaticReboot != nil {
		in, out := &in.AutomaticReboot, &out.AutomaticReboot
		*out = new(bool)
		**out = **in
	}
	if in.Balloon != nil {
		in, out := &in.Balloon, &out.Balloon
		*out = new(float64)
		**out = **in
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(string)
		**out = **in
	}
	if in.Bootdisk != nil {
		in, out := &in.Bootdisk, &out.Bootdisk
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.CiWait != nil {
		in, out := &in.CiWait, &out.CiWait
		*out = new(float64)
		**out = **in
	}
	if in.Cicustom != nil {
		in, out := &in.Cicustom, &out.Cicustom
		*out = new(string)
		**out = **in
	}
	if in.CipasswordSecretRef != nil {
		in, out := &in.CipasswordSecretRef, &out.CipasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Ciupgrade != nil {
		in, out := &in.Ciupgrade, &out.Ciupgrade
		*out = new(bool)
		**out = **in
	}
	if in.Ciuser != nil {
		in, out := &in.Ciuser, &out.Ciuser
		*out = new(string)
		**out = **in
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = new(string)
		**out = **in
	}
	if in.CloneWait != nil {
		in, out := &in.CloneWait, &out.CloneWait
		*out = new(float64)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DefineConnectionInfo != nil {
		in, out := &in.DefineConnectionInfo, &out.DefineConnectionInfo
		*out = new(bool)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]DisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Efidisk != nil {
		in, out := &in.Efidisk, &out.Efidisk
		*out = make([]EfidiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceCreate != nil {
		in, out := &in.ForceCreate, &out.ForceCreate
		*out = new(bool)
		**out = **in
	}
	if in.ForceRecreateOnChangeOf != nil {
		in, out := &in.ForceRecreateOnChangeOf, &out.ForceRecreateOnChangeOf
		*out = new(string)
		**out = **in
	}
	if in.FullClone != nil {
		in, out := &in.FullClone, &out.FullClone
		*out = new(bool)
		**out = **in
	}
	if in.Hagroup != nil {
		in, out := &in.Hagroup, &out.Hagroup
		*out = new(string)
		**out = **in
	}
	if in.Hastate != nil {
		in, out := &in.Hastate, &out.Hastate
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hotplug != nil {
		in, out := &in.Hotplug, &out.Hotplug
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig0 != nil {
		in, out := &in.Ipconfig0, &out.Ipconfig0
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig1 != nil {
		in, out := &in.Ipconfig1, &out.Ipconfig1
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig10 != nil {
		in, out := &in.Ipconfig10, &out.Ipconfig10
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig11 != nil {
		in, out := &in.Ipconfig11, &out.Ipconfig11
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig12 != nil {
		in, out := &in.Ipconfig12, &out.Ipconfig12
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig13 != nil {
		in, out := &in.Ipconfig13, &out.Ipconfig13
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig14 != nil {
		in, out := &in.Ipconfig14, &out.Ipconfig14
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig15 != nil {
		in, out := &in.Ipconfig15, &out.Ipconfig15
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig2 != nil {
		in, out := &in.Ipconfig2, &out.Ipconfig2
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig3 != nil {
		in, out := &in.Ipconfig3, &out.Ipconfig3
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig4 != nil {
		in, out := &in.Ipconfig4, &out.Ipconfig4
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig5 != nil {
		in, out := &in.Ipconfig5, &out.Ipconfig5
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig6 != nil {
		in, out := &in.Ipconfig6, &out.Ipconfig6
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig7 != nil {
		in, out := &in.Ipconfig7, &out.Ipconfig7
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig8 != nil {
		in, out := &in.Ipconfig8, &out.Ipconfig8
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig9 != nil {
		in, out := &in.Ipconfig9, &out.Ipconfig9
		*out = new(string)
		**out = **in
	}
	if in.Kvm != nil {
		in, out := &in.Kvm, &out.Kvm
		*out = new(bool)
		**out = **in
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Nameserver != nil {
		in, out := &in.Nameserver, &out.Nameserver
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Onboot != nil {
		in, out := &in.Onboot, &out.Onboot
		*out = new(bool)
		**out = **in
	}
	if in.OsNetworkConfig != nil {
		in, out := &in.OsNetworkConfig, &out.OsNetworkConfig
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Pxe != nil {
		in, out := &in.Pxe, &out.Pxe
		*out = new(bool)
		**out = **in
	}
	if in.QemuOs != nil {
		in, out := &in.QemuOs, &out.QemuOs
		*out = new(string)
		**out = **in
	}
	if in.SSHForwardIP != nil {
		in, out := &in.SSHForwardIP, &out.SSHForwardIP
		*out = new(string)
		**out = **in
	}
	if in.SSHPrivateKeySecretRef != nil {
		in, out := &in.SSHPrivateKeySecretRef, &out.SSHPrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Scsihw != nil {
		in, out := &in.Scsihw, &out.Scsihw
		*out = new(string)
		**out = **in
	}
	if in.Searchdomain != nil {
		in, out := &in.Searchdomain, &out.Searchdomain
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = make([]SerialInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipIPv4 != nil {
		in, out := &in.SkipIPv4, &out.SkipIPv4
		*out = new(bool)
		**out = **in
	}
	if in.SkipIPv6 != nil {
		in, out := &in.SkipIPv6, &out.SkipIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Sshkeys != nil {
		in, out := &in.Sshkeys, &out.Sshkeys
		*out = new(string)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = new(string)
		**out = **in
	}
	if in.Tablet != nil {
		in, out := &in.Tablet, &out.Tablet
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TargetNode != nil {
		in, out := &in.TargetNode, &out.TargetNode
		*out = new(string)
		**out = **in
	}
	if in.TargetNodes != nil {
		in, out := &in.TargetNodes, &out.TargetNodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vmid != nil {
		in, out := &in.Vmid, &out.Vmid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuInitParameters.
func (in *QemuInitParameters) DeepCopy() *QemuInitParameters {
	if in == nil {
		return nil
	}
	out := new(QemuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuList) DeepCopyInto(out *QemuList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Qemu, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuList.
func (in *QemuList) DeepCopy() *QemuList {
	if in == nil {
		return nil
	}
	out := new(QemuList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *QemuList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuObservation) DeepCopyInto(out *QemuObservation) {
	*out = *in
	if in.AdditionalWait != nil {
		in, out := &in.AdditionalWait, &out.AdditionalWait
		*out = new(float64)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(float64)
		**out = **in
	}
	if in.AgentTimeout != nil {
		in, out := &in.AgentTimeout, &out.AgentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = new(string)
		**out = **in
	}
	if in.AutomaticReboot != nil {
		in, out := &in.AutomaticReboot, &out.AutomaticReboot
		*out = new(bool)
		**out = **in
	}
	if in.Balloon != nil {
		in, out := &in.Balloon, &out.Balloon
		*out = new(float64)
		**out = **in
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(string)
		**out = **in
	}
	if in.Bootdisk != nil {
		in, out := &in.Bootdisk, &out.Bootdisk
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.CiWait != nil {
		in, out := &in.CiWait, &out.CiWait
		*out = new(float64)
		**out = **in
	}
	if in.Cicustom != nil {
		in, out := &in.Cicustom, &out.Cicustom
		*out = new(string)
		**out = **in
	}
	if in.Ciupgrade != nil {
		in, out := &in.Ciupgrade, &out.Ciupgrade
		*out = new(bool)
		**out = **in
	}
	if in.Ciuser != nil {
		in, out := &in.Ciuser, &out.Ciuser
		*out = new(string)
		**out = **in
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = new(string)
		**out = **in
	}
	if in.CloneWait != nil {
		in, out := &in.CloneWait, &out.CloneWait
		*out = new(float64)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DefaultIPv4Address != nil {
		in, out := &in.DefaultIPv4Address, &out.DefaultIPv4Address
		*out = new(string)
		**out = **in
	}
	if in.DefaultIPv6Address != nil {
		in, out := &in.DefaultIPv6Address, &out.DefaultIPv6Address
		*out = new(string)
		**out = **in
	}
	if in.DefineConnectionInfo != nil {
		in, out := &in.DefineConnectionInfo, &out.DefineConnectionInfo
		*out = new(bool)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]DisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Efidisk != nil {
		in, out := &in.Efidisk, &out.Efidisk
		*out = make([]EfidiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceCreate != nil {
		in, out := &in.ForceCreate, &out.ForceCreate
		*out = new(bool)
		**out = **in
	}
	if in.ForceRecreateOnChangeOf != nil {
		in, out := &in.ForceRecreateOnChangeOf, &out.ForceRecreateOnChangeOf
		*out = new(string)
		**out = **in
	}
	if in.FullClone != nil {
		in, out := &in.FullClone, &out.FullClone
		*out = new(bool)
		**out = **in
	}
	if in.Hagroup != nil {
		in, out := &in.Hagroup, &out.Hagroup
		*out = new(string)
		**out = **in
	}
	if in.Hastate != nil {
		in, out := &in.Hastate, &out.Hastate
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hotplug != nil {
		in, out := &in.Hotplug, &out.Hotplug
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig0 != nil {
		in, out := &in.Ipconfig0, &out.Ipconfig0
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig1 != nil {
		in, out := &in.Ipconfig1, &out.Ipconfig1
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig10 != nil {
		in, out := &in.Ipconfig10, &out.Ipconfig10
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig11 != nil {
		in, out := &in.Ipconfig11, &out.Ipconfig11
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig12 != nil {
		in, out := &in.Ipconfig12, &out.Ipconfig12
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig13 != nil {
		in, out := &in.Ipconfig13, &out.Ipconfig13
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig14 != nil {
		in, out := &in.Ipconfig14, &out.Ipconfig14
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig15 != nil {
		in, out := &in.Ipconfig15, &out.Ipconfig15
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig2 != nil {
		in, out := &in.Ipconfig2, &out.Ipconfig2
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig3 != nil {
		in, out := &in.Ipconfig3, &out.Ipconfig3
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig4 != nil {
		in, out := &in.Ipconfig4, &out.Ipconfig4
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig5 != nil {
		in, out := &in.Ipconfig5, &out.Ipconfig5
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig6 != nil {
		in, out := &in.Ipconfig6, &out.Ipconfig6
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig7 != nil {
		in, out := &in.Ipconfig7, &out.Ipconfig7
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig8 != nil {
		in, out := &in.Ipconfig8, &out.Ipconfig8
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig9 != nil {
		in, out := &in.Ipconfig9, &out.Ipconfig9
		*out = new(string)
		**out = **in
	}
	if in.Kvm != nil {
		in, out := &in.Kvm, &out.Kvm
		*out = new(bool)
		**out = **in
	}
	if in.LinkedVmid != nil {
		in, out := &in.LinkedVmid, &out.LinkedVmid
		*out = new(float64)
		**out = **in
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Nameserver != nil {
		in, out := &in.Nameserver, &out.Nameserver
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Onboot != nil {
		in, out := &in.Onboot, &out.Onboot
		*out = new(bool)
		**out = **in
	}
	if in.OsNetworkConfig != nil {
		in, out := &in.OsNetworkConfig, &out.OsNetworkConfig
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Pxe != nil {
		in, out := &in.Pxe, &out.Pxe
		*out = new(bool)
		**out = **in
	}
	if in.QemuOs != nil {
		in, out := &in.QemuOs, &out.QemuOs
		*out = new(string)
		**out = **in
	}
	if in.RebootRequired != nil {
		in, out := &in.RebootRequired, &out.RebootRequired
		*out = new(bool)
		**out = **in
	}
	if in.SSHForwardIP != nil {
		in, out := &in.SSHForwardIP, &out.SSHForwardIP
		*out = new(string)
		**out = **in
	}
	if in.SSHHost != nil {
		in, out := &in.SSHHost, &out.SSHHost
		*out = new(string)
		**out = **in
	}
	if in.SSHPort != nil {
		in, out := &in.SSHPort, &out.SSHPort
		*out = new(string)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Scsihw != nil {
		in, out := &in.Scsihw, &out.Scsihw
		*out = new(string)
		**out = **in
	}
	if in.Searchdomain != nil {
		in, out := &in.Searchdomain, &out.Searchdomain
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = make([]SerialObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipIPv4 != nil {
		in, out := &in.SkipIPv4, &out.SkipIPv4
		*out = new(bool)
		**out = **in
	}
	if in.SkipIPv6 != nil {
		in, out := &in.SkipIPv6, &out.SkipIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Sshkeys != nil {
		in, out := &in.Sshkeys, &out.Sshkeys
		*out = new(string)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = new(string)
		**out = **in
	}
	if in.Tablet != nil {
		in, out := &in.Tablet, &out.Tablet
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TargetNode != nil {
		in, out := &in.TargetNode, &out.TargetNode
		*out = new(string)
		**out = **in
	}
	if in.TargetNodes != nil {
		in, out := &in.TargetNodes, &out.TargetNodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UnusedDisk != nil {
		in, out := &in.UnusedDisk, &out.UnusedDisk
		*out = make([]UnusedDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vmid != nil {
		in, out := &in.Vmid, &out.Vmid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuObservation.
func (in *QemuObservation) DeepCopy() *QemuObservation {
	if in == nil {
		return nil
	}
	out := new(QemuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuParameters) DeepCopyInto(out *QemuParameters) {
	*out = *in
	if in.AdditionalWait != nil {
		in, out := &in.AdditionalWait, &out.AdditionalWait
		*out = new(float64)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = new(float64)
		**out = **in
	}
	if in.AgentTimeout != nil {
		in, out := &in.AgentTimeout, &out.AgentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = new(string)
		**out = **in
	}
	if in.AutomaticReboot != nil {
		in, out := &in.AutomaticReboot, &out.AutomaticReboot
		*out = new(bool)
		**out = **in
	}
	if in.Balloon != nil {
		in, out := &in.Balloon, &out.Balloon
		*out = new(float64)
		**out = **in
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(string)
		**out = **in
	}
	if in.Bootdisk != nil {
		in, out := &in.Bootdisk, &out.Bootdisk
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.CiWait != nil {
		in, out := &in.CiWait, &out.CiWait
		*out = new(float64)
		**out = **in
	}
	if in.Cicustom != nil {
		in, out := &in.Cicustom, &out.Cicustom
		*out = new(string)
		**out = **in
	}
	if in.CipasswordSecretRef != nil {
		in, out := &in.CipasswordSecretRef, &out.CipasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Ciupgrade != nil {
		in, out := &in.Ciupgrade, &out.Ciupgrade
		*out = new(bool)
		**out = **in
	}
	if in.Ciuser != nil {
		in, out := &in.Ciuser, &out.Ciuser
		*out = new(string)
		**out = **in
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = new(string)
		**out = **in
	}
	if in.CloneWait != nil {
		in, out := &in.CloneWait, &out.CloneWait
		*out = new(float64)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DefineConnectionInfo != nil {
		in, out := &in.DefineConnectionInfo, &out.DefineConnectionInfo
		*out = new(bool)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]DisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Efidisk != nil {
		in, out := &in.Efidisk, &out.Efidisk
		*out = make([]EfidiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceCreate != nil {
		in, out := &in.ForceCreate, &out.ForceCreate
		*out = new(bool)
		**out = **in
	}
	if in.ForceRecreateOnChangeOf != nil {
		in, out := &in.ForceRecreateOnChangeOf, &out.ForceRecreateOnChangeOf
		*out = new(string)
		**out = **in
	}
	if in.FullClone != nil {
		in, out := &in.FullClone, &out.FullClone
		*out = new(bool)
		**out = **in
	}
	if in.Hagroup != nil {
		in, out := &in.Hagroup, &out.Hagroup
		*out = new(string)
		**out = **in
	}
	if in.Hastate != nil {
		in, out := &in.Hastate, &out.Hastate
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hotplug != nil {
		in, out := &in.Hotplug, &out.Hotplug
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig0 != nil {
		in, out := &in.Ipconfig0, &out.Ipconfig0
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig1 != nil {
		in, out := &in.Ipconfig1, &out.Ipconfig1
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig10 != nil {
		in, out := &in.Ipconfig10, &out.Ipconfig10
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig11 != nil {
		in, out := &in.Ipconfig11, &out.Ipconfig11
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig12 != nil {
		in, out := &in.Ipconfig12, &out.Ipconfig12
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig13 != nil {
		in, out := &in.Ipconfig13, &out.Ipconfig13
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig14 != nil {
		in, out := &in.Ipconfig14, &out.Ipconfig14
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig15 != nil {
		in, out := &in.Ipconfig15, &out.Ipconfig15
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig2 != nil {
		in, out := &in.Ipconfig2, &out.Ipconfig2
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig3 != nil {
		in, out := &in.Ipconfig3, &out.Ipconfig3
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig4 != nil {
		in, out := &in.Ipconfig4, &out.Ipconfig4
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig5 != nil {
		in, out := &in.Ipconfig5, &out.Ipconfig5
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig6 != nil {
		in, out := &in.Ipconfig6, &out.Ipconfig6
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig7 != nil {
		in, out := &in.Ipconfig7, &out.Ipconfig7
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig8 != nil {
		in, out := &in.Ipconfig8, &out.Ipconfig8
		*out = new(string)
		**out = **in
	}
	if in.Ipconfig9 != nil {
		in, out := &in.Ipconfig9, &out.Ipconfig9
		*out = new(string)
		**out = **in
	}
	if in.Kvm != nil {
		in, out := &in.Kvm, &out.Kvm
		*out = new(bool)
		**out = **in
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Nameserver != nil {
		in, out := &in.Nameserver, &out.Nameserver
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Onboot != nil {
		in, out := &in.Onboot, &out.Onboot
		*out = new(bool)
		**out = **in
	}
	if in.OsNetworkConfig != nil {
		in, out := &in.OsNetworkConfig, &out.OsNetworkConfig
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Pool != nil {
		in, out := &in.Pool, &out.Pool
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Pxe != nil {
		in, out := &in.Pxe, &out.Pxe
		*out = new(bool)
		**out = **in
	}
	if in.QemuOs != nil {
		in, out := &in.QemuOs, &out.QemuOs
		*out = new(string)
		**out = **in
	}
	if in.SSHForwardIP != nil {
		in, out := &in.SSHForwardIP, &out.SSHForwardIP
		*out = new(string)
		**out = **in
	}
	if in.SSHPrivateKeySecretRef != nil {
		in, out := &in.SSHPrivateKeySecretRef, &out.SSHPrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.Scsihw != nil {
		in, out := &in.Scsihw, &out.Scsihw
		*out = new(string)
		**out = **in
	}
	if in.Searchdomain != nil {
		in, out := &in.Searchdomain, &out.Searchdomain
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = make([]SerialParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipIPv4 != nil {
		in, out := &in.SkipIPv4, &out.SkipIPv4
		*out = new(bool)
		**out = **in
	}
	if in.SkipIPv6 != nil {
		in, out := &in.SkipIPv6, &out.SkipIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Sshkeys != nil {
		in, out := &in.Sshkeys, &out.Sshkeys
		*out = new(string)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = new(string)
		**out = **in
	}
	if in.Tablet != nil {
		in, out := &in.Tablet, &out.Tablet
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
	if in.TargetNode != nil {
		in, out := &in.TargetNode, &out.TargetNode
		*out = new(string)
		**out = **in
	}
	if in.TargetNodes != nil {
		in, out := &in.TargetNodes, &out.TargetNodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Vmid != nil {
		in, out := &in.Vmid, &out.Vmid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuParameters.
func (in *QemuParameters) DeepCopy() *QemuParameters {
	if in == nil {
		return nil
	}
	out := new(QemuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuSpec) DeepCopyInto(out *QemuSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuSpec.
func (in *QemuSpec) DeepCopy() *QemuSpec {
	if in == nil {
		return nil
	}
	out := new(QemuSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QemuStatus) DeepCopyInto(out *QemuStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QemuStatus.
func (in *QemuStatus) DeepCopy() *QemuStatus {
	if in == nil {
		return nil
	}
	out := new(QemuStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CdromInitParameters) DeepCopyInto(out *Sata0CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CdromInitParameters.
func (in *Sata0CdromInitParameters) DeepCopy() *Sata0CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CdromObservation) DeepCopyInto(out *Sata0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CdromObservation.
func (in *Sata0CdromObservation) DeepCopy() *Sata0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CdromParameters) DeepCopyInto(out *Sata0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CdromParameters.
func (in *Sata0CdromParameters) DeepCopy() *Sata0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CloudinitInitParameters) DeepCopyInto(out *Sata0CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CloudinitInitParameters.
func (in *Sata0CloudinitInitParameters) DeepCopy() *Sata0CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CloudinitObservation) DeepCopyInto(out *Sata0CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CloudinitObservation.
func (in *Sata0CloudinitObservation) DeepCopy() *Sata0CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0CloudinitParameters) DeepCopyInto(out *Sata0CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0CloudinitParameters.
func (in *Sata0CloudinitParameters) DeepCopy() *Sata0CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0DiskInitParameters) DeepCopyInto(out *Sata0DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0DiskInitParameters.
func (in *Sata0DiskInitParameters) DeepCopy() *Sata0DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0DiskObservation) DeepCopyInto(out *Sata0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0DiskObservation.
func (in *Sata0DiskObservation) DeepCopy() *Sata0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0DiskParameters) DeepCopyInto(out *Sata0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0DiskParameters.
func (in *Sata0DiskParameters) DeepCopy() *Sata0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0InitParameters) DeepCopyInto(out *Sata0InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata0CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata0CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata0DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata0PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0InitParameters.
func (in *Sata0InitParameters) DeepCopy() *Sata0InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0Observation) DeepCopyInto(out *Sata0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata0CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0Observation.
func (in *Sata0Observation) DeepCopy() *Sata0Observation {
	if in == nil {
		return nil
	}
	out := new(Sata0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0Parameters) DeepCopyInto(out *Sata0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata0CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0Parameters.
func (in *Sata0Parameters) DeepCopy() *Sata0Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0PassthroughInitParameters) DeepCopyInto(out *Sata0PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0PassthroughInitParameters.
func (in *Sata0PassthroughInitParameters) DeepCopy() *Sata0PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0PassthroughObservation) DeepCopyInto(out *Sata0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0PassthroughObservation.
func (in *Sata0PassthroughObservation) DeepCopy() *Sata0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata0PassthroughParameters) DeepCopyInto(out *Sata0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata0PassthroughParameters.
func (in *Sata0PassthroughParameters) DeepCopy() *Sata0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CdromInitParameters) DeepCopyInto(out *Sata1CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CdromInitParameters.
func (in *Sata1CdromInitParameters) DeepCopy() *Sata1CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CdromObservation) DeepCopyInto(out *Sata1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CdromObservation.
func (in *Sata1CdromObservation) DeepCopy() *Sata1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CdromParameters) DeepCopyInto(out *Sata1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CdromParameters.
func (in *Sata1CdromParameters) DeepCopy() *Sata1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CloudinitInitParameters) DeepCopyInto(out *Sata1CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CloudinitInitParameters.
func (in *Sata1CloudinitInitParameters) DeepCopy() *Sata1CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CloudinitObservation) DeepCopyInto(out *Sata1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CloudinitObservation.
func (in *Sata1CloudinitObservation) DeepCopy() *Sata1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1CloudinitParameters) DeepCopyInto(out *Sata1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1CloudinitParameters.
func (in *Sata1CloudinitParameters) DeepCopy() *Sata1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1DiskInitParameters) DeepCopyInto(out *Sata1DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1DiskInitParameters.
func (in *Sata1DiskInitParameters) DeepCopy() *Sata1DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1DiskObservation) DeepCopyInto(out *Sata1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1DiskObservation.
func (in *Sata1DiskObservation) DeepCopy() *Sata1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1DiskParameters) DeepCopyInto(out *Sata1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1DiskParameters.
func (in *Sata1DiskParameters) DeepCopy() *Sata1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1InitParameters) DeepCopyInto(out *Sata1InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata1CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata1CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata1DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata1PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1InitParameters.
func (in *Sata1InitParameters) DeepCopy() *Sata1InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1Observation) DeepCopyInto(out *Sata1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1Observation.
func (in *Sata1Observation) DeepCopy() *Sata1Observation {
	if in == nil {
		return nil
	}
	out := new(Sata1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1Parameters) DeepCopyInto(out *Sata1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1Parameters.
func (in *Sata1Parameters) DeepCopy() *Sata1Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1PassthroughInitParameters) DeepCopyInto(out *Sata1PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1PassthroughInitParameters.
func (in *Sata1PassthroughInitParameters) DeepCopy() *Sata1PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1PassthroughObservation) DeepCopyInto(out *Sata1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1PassthroughObservation.
func (in *Sata1PassthroughObservation) DeepCopy() *Sata1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata1PassthroughParameters) DeepCopyInto(out *Sata1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata1PassthroughParameters.
func (in *Sata1PassthroughParameters) DeepCopy() *Sata1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CdromInitParameters) DeepCopyInto(out *Sata2CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CdromInitParameters.
func (in *Sata2CdromInitParameters) DeepCopy() *Sata2CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CdromObservation) DeepCopyInto(out *Sata2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CdromObservation.
func (in *Sata2CdromObservation) DeepCopy() *Sata2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CdromParameters) DeepCopyInto(out *Sata2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CdromParameters.
func (in *Sata2CdromParameters) DeepCopy() *Sata2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CloudinitInitParameters) DeepCopyInto(out *Sata2CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CloudinitInitParameters.
func (in *Sata2CloudinitInitParameters) DeepCopy() *Sata2CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CloudinitObservation) DeepCopyInto(out *Sata2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CloudinitObservation.
func (in *Sata2CloudinitObservation) DeepCopy() *Sata2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2CloudinitParameters) DeepCopyInto(out *Sata2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2CloudinitParameters.
func (in *Sata2CloudinitParameters) DeepCopy() *Sata2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2DiskInitParameters) DeepCopyInto(out *Sata2DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2DiskInitParameters.
func (in *Sata2DiskInitParameters) DeepCopy() *Sata2DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2DiskObservation) DeepCopyInto(out *Sata2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2DiskObservation.
func (in *Sata2DiskObservation) DeepCopy() *Sata2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2DiskParameters) DeepCopyInto(out *Sata2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2DiskParameters.
func (in *Sata2DiskParameters) DeepCopy() *Sata2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2InitParameters) DeepCopyInto(out *Sata2InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata2CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata2CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata2DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata2PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2InitParameters.
func (in *Sata2InitParameters) DeepCopy() *Sata2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2Observation) DeepCopyInto(out *Sata2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2Observation.
func (in *Sata2Observation) DeepCopy() *Sata2Observation {
	if in == nil {
		return nil
	}
	out := new(Sata2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2Parameters) DeepCopyInto(out *Sata2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2Parameters.
func (in *Sata2Parameters) DeepCopy() *Sata2Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2PassthroughInitParameters) DeepCopyInto(out *Sata2PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2PassthroughInitParameters.
func (in *Sata2PassthroughInitParameters) DeepCopy() *Sata2PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2PassthroughObservation) DeepCopyInto(out *Sata2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2PassthroughObservation.
func (in *Sata2PassthroughObservation) DeepCopy() *Sata2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata2PassthroughParameters) DeepCopyInto(out *Sata2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata2PassthroughParameters.
func (in *Sata2PassthroughParameters) DeepCopy() *Sata2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CdromInitParameters) DeepCopyInto(out *Sata3CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CdromInitParameters.
func (in *Sata3CdromInitParameters) DeepCopy() *Sata3CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CdromObservation) DeepCopyInto(out *Sata3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CdromObservation.
func (in *Sata3CdromObservation) DeepCopy() *Sata3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CdromParameters) DeepCopyInto(out *Sata3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CdromParameters.
func (in *Sata3CdromParameters) DeepCopy() *Sata3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CloudinitInitParameters) DeepCopyInto(out *Sata3CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CloudinitInitParameters.
func (in *Sata3CloudinitInitParameters) DeepCopy() *Sata3CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CloudinitObservation) DeepCopyInto(out *Sata3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CloudinitObservation.
func (in *Sata3CloudinitObservation) DeepCopy() *Sata3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3CloudinitParameters) DeepCopyInto(out *Sata3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3CloudinitParameters.
func (in *Sata3CloudinitParameters) DeepCopy() *Sata3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3DiskInitParameters) DeepCopyInto(out *Sata3DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3DiskInitParameters.
func (in *Sata3DiskInitParameters) DeepCopy() *Sata3DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3DiskObservation) DeepCopyInto(out *Sata3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3DiskObservation.
func (in *Sata3DiskObservation) DeepCopy() *Sata3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3DiskParameters) DeepCopyInto(out *Sata3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3DiskParameters.
func (in *Sata3DiskParameters) DeepCopy() *Sata3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3InitParameters) DeepCopyInto(out *Sata3InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata3CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata3CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata3DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata3PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3InitParameters.
func (in *Sata3InitParameters) DeepCopy() *Sata3InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3Observation) DeepCopyInto(out *Sata3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3Observation.
func (in *Sata3Observation) DeepCopy() *Sata3Observation {
	if in == nil {
		return nil
	}
	out := new(Sata3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3Parameters) DeepCopyInto(out *Sata3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3Parameters.
func (in *Sata3Parameters) DeepCopy() *Sata3Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3PassthroughInitParameters) DeepCopyInto(out *Sata3PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3PassthroughInitParameters.
func (in *Sata3PassthroughInitParameters) DeepCopy() *Sata3PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3PassthroughObservation) DeepCopyInto(out *Sata3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3PassthroughObservation.
func (in *Sata3PassthroughObservation) DeepCopy() *Sata3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata3PassthroughParameters) DeepCopyInto(out *Sata3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata3PassthroughParameters.
func (in *Sata3PassthroughParameters) DeepCopy() *Sata3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CdromInitParameters) DeepCopyInto(out *Sata4CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CdromInitParameters.
func (in *Sata4CdromInitParameters) DeepCopy() *Sata4CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CdromObservation) DeepCopyInto(out *Sata4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CdromObservation.
func (in *Sata4CdromObservation) DeepCopy() *Sata4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CdromParameters) DeepCopyInto(out *Sata4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CdromParameters.
func (in *Sata4CdromParameters) DeepCopy() *Sata4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CloudinitInitParameters) DeepCopyInto(out *Sata4CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CloudinitInitParameters.
func (in *Sata4CloudinitInitParameters) DeepCopy() *Sata4CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CloudinitObservation) DeepCopyInto(out *Sata4CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CloudinitObservation.
func (in *Sata4CloudinitObservation) DeepCopy() *Sata4CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4CloudinitParameters) DeepCopyInto(out *Sata4CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4CloudinitParameters.
func (in *Sata4CloudinitParameters) DeepCopy() *Sata4CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4DiskInitParameters) DeepCopyInto(out *Sata4DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4DiskInitParameters.
func (in *Sata4DiskInitParameters) DeepCopy() *Sata4DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4DiskObservation) DeepCopyInto(out *Sata4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4DiskObservation.
func (in *Sata4DiskObservation) DeepCopy() *Sata4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4DiskParameters) DeepCopyInto(out *Sata4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4DiskParameters.
func (in *Sata4DiskParameters) DeepCopy() *Sata4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4InitParameters) DeepCopyInto(out *Sata4InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata4CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata4CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata4DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata4PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4InitParameters.
func (in *Sata4InitParameters) DeepCopy() *Sata4InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4Observation) DeepCopyInto(out *Sata4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata4CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4Observation.
func (in *Sata4Observation) DeepCopy() *Sata4Observation {
	if in == nil {
		return nil
	}
	out := new(Sata4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4Parameters) DeepCopyInto(out *Sata4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata4CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4Parameters.
func (in *Sata4Parameters) DeepCopy() *Sata4Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4PassthroughInitParameters) DeepCopyInto(out *Sata4PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4PassthroughInitParameters.
func (in *Sata4PassthroughInitParameters) DeepCopy() *Sata4PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4PassthroughObservation) DeepCopyInto(out *Sata4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4PassthroughObservation.
func (in *Sata4PassthroughObservation) DeepCopy() *Sata4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata4PassthroughParameters) DeepCopyInto(out *Sata4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata4PassthroughParameters.
func (in *Sata4PassthroughParameters) DeepCopy() *Sata4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CdromInitParameters) DeepCopyInto(out *Sata5CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CdromInitParameters.
func (in *Sata5CdromInitParameters) DeepCopy() *Sata5CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CdromObservation) DeepCopyInto(out *Sata5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CdromObservation.
func (in *Sata5CdromObservation) DeepCopy() *Sata5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CdromParameters) DeepCopyInto(out *Sata5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CdromParameters.
func (in *Sata5CdromParameters) DeepCopy() *Sata5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CloudinitInitParameters) DeepCopyInto(out *Sata5CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CloudinitInitParameters.
func (in *Sata5CloudinitInitParameters) DeepCopy() *Sata5CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CloudinitObservation) DeepCopyInto(out *Sata5CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CloudinitObservation.
func (in *Sata5CloudinitObservation) DeepCopy() *Sata5CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5CloudinitParameters) DeepCopyInto(out *Sata5CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5CloudinitParameters.
func (in *Sata5CloudinitParameters) DeepCopy() *Sata5CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5DiskInitParameters) DeepCopyInto(out *Sata5DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5DiskInitParameters.
func (in *Sata5DiskInitParameters) DeepCopy() *Sata5DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5DiskObservation) DeepCopyInto(out *Sata5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5DiskObservation.
func (in *Sata5DiskObservation) DeepCopy() *Sata5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5DiskParameters) DeepCopyInto(out *Sata5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5DiskParameters.
func (in *Sata5DiskParameters) DeepCopy() *Sata5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5InitParameters) DeepCopyInto(out *Sata5InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata5CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata5CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata5DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata5PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5InitParameters.
func (in *Sata5InitParameters) DeepCopy() *Sata5InitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5Observation) DeepCopyInto(out *Sata5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata5CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5Observation.
func (in *Sata5Observation) DeepCopy() *Sata5Observation {
	if in == nil {
		return nil
	}
	out := new(Sata5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5Parameters) DeepCopyInto(out *Sata5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Sata5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Sata5CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Sata5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Sata5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5Parameters.
func (in *Sata5Parameters) DeepCopy() *Sata5Parameters {
	if in == nil {
		return nil
	}
	out := new(Sata5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5PassthroughInitParameters) DeepCopyInto(out *Sata5PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5PassthroughInitParameters.
func (in *Sata5PassthroughInitParameters) DeepCopy() *Sata5PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5PassthroughObservation) DeepCopyInto(out *Sata5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5PassthroughObservation.
func (in *Sata5PassthroughObservation) DeepCopy() *Sata5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Sata5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sata5PassthroughParameters) DeepCopyInto(out *Sata5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sata5PassthroughParameters.
func (in *Sata5PassthroughParameters) DeepCopy() *Sata5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Sata5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SataInitParameters) DeepCopyInto(out *SataInitParameters) {
	*out = *in
	if in.Sata0 != nil {
		in, out := &in.Sata0, &out.Sata0
		*out = make([]Sata0InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata1 != nil {
		in, out := &in.Sata1, &out.Sata1
		*out = make([]Sata1InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata2 != nil {
		in, out := &in.Sata2, &out.Sata2
		*out = make([]Sata2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata3 != nil {
		in, out := &in.Sata3, &out.Sata3
		*out = make([]Sata3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata4 != nil {
		in, out := &in.Sata4, &out.Sata4
		*out = make([]Sata4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata5 != nil {
		in, out := &in.Sata5, &out.Sata5
		*out = make([]Sata5InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SataInitParameters.
func (in *SataInitParameters) DeepCopy() *SataInitParameters {
	if in == nil {
		return nil
	}
	out := new(SataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SataObservation) DeepCopyInto(out *SataObservation) {
	*out = *in
	if in.Sata0 != nil {
		in, out := &in.Sata0, &out.Sata0
		*out = make([]Sata0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata1 != nil {
		in, out := &in.Sata1, &out.Sata1
		*out = make([]Sata1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata2 != nil {
		in, out := &in.Sata2, &out.Sata2
		*out = make([]Sata2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata3 != nil {
		in, out := &in.Sata3, &out.Sata3
		*out = make([]Sata3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata4 != nil {
		in, out := &in.Sata4, &out.Sata4
		*out = make([]Sata4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata5 != nil {
		in, out := &in.Sata5, &out.Sata5
		*out = make([]Sata5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SataObservation.
func (in *SataObservation) DeepCopy() *SataObservation {
	if in == nil {
		return nil
	}
	out := new(SataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SataParameters) DeepCopyInto(out *SataParameters) {
	*out = *in
	if in.Sata0 != nil {
		in, out := &in.Sata0, &out.Sata0
		*out = make([]Sata0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata1 != nil {
		in, out := &in.Sata1, &out.Sata1
		*out = make([]Sata1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata2 != nil {
		in, out := &in.Sata2, &out.Sata2
		*out = make([]Sata2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata3 != nil {
		in, out := &in.Sata3, &out.Sata3
		*out = make([]Sata3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata4 != nil {
		in, out := &in.Sata4, &out.Sata4
		*out = make([]Sata4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sata5 != nil {
		in, out := &in.Sata5, &out.Sata5
		*out = make([]Sata5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SataParameters.
func (in *SataParameters) DeepCopy() *SataParameters {
	if in == nil {
		return nil
	}
	out := new(SataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CdromInitParameters) DeepCopyInto(out *Scsi0CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CdromInitParameters.
func (in *Scsi0CdromInitParameters) DeepCopy() *Scsi0CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CdromObservation) DeepCopyInto(out *Scsi0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CdromObservation.
func (in *Scsi0CdromObservation) DeepCopy() *Scsi0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CdromParameters) DeepCopyInto(out *Scsi0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CdromParameters.
func (in *Scsi0CdromParameters) DeepCopy() *Scsi0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CloudinitInitParameters) DeepCopyInto(out *Scsi0CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CloudinitInitParameters.
func (in *Scsi0CloudinitInitParameters) DeepCopy() *Scsi0CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CloudinitObservation) DeepCopyInto(out *Scsi0CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CloudinitObservation.
func (in *Scsi0CloudinitObservation) DeepCopy() *Scsi0CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0CloudinitParameters) DeepCopyInto(out *Scsi0CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0CloudinitParameters.
func (in *Scsi0CloudinitParameters) DeepCopy() *Scsi0CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0DiskInitParameters) DeepCopyInto(out *Scsi0DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0DiskInitParameters.
func (in *Scsi0DiskInitParameters) DeepCopy() *Scsi0DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0DiskObservation) DeepCopyInto(out *Scsi0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0DiskObservation.
func (in *Scsi0DiskObservation) DeepCopy() *Scsi0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0DiskParameters) DeepCopyInto(out *Scsi0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0DiskParameters.
func (in *Scsi0DiskParameters) DeepCopy() *Scsi0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0InitParameters) DeepCopyInto(out *Scsi0InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi0CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi0CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi0DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi0PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0InitParameters.
func (in *Scsi0InitParameters) DeepCopy() *Scsi0InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0Observation) DeepCopyInto(out *Scsi0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi0CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0Observation.
func (in *Scsi0Observation) DeepCopy() *Scsi0Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0Parameters) DeepCopyInto(out *Scsi0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi0CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0Parameters.
func (in *Scsi0Parameters) DeepCopy() *Scsi0Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0PassthroughInitParameters) DeepCopyInto(out *Scsi0PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0PassthroughInitParameters.
func (in *Scsi0PassthroughInitParameters) DeepCopy() *Scsi0PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0PassthroughObservation) DeepCopyInto(out *Scsi0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0PassthroughObservation.
func (in *Scsi0PassthroughObservation) DeepCopy() *Scsi0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi0PassthroughParameters) DeepCopyInto(out *Scsi0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi0PassthroughParameters.
func (in *Scsi0PassthroughParameters) DeepCopy() *Scsi0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CdromInitParameters) DeepCopyInto(out *Scsi10CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CdromInitParameters.
func (in *Scsi10CdromInitParameters) DeepCopy() *Scsi10CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CdromObservation) DeepCopyInto(out *Scsi10CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CdromObservation.
func (in *Scsi10CdromObservation) DeepCopy() *Scsi10CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CdromParameters) DeepCopyInto(out *Scsi10CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CdromParameters.
func (in *Scsi10CdromParameters) DeepCopy() *Scsi10CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CloudinitInitParameters) DeepCopyInto(out *Scsi10CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CloudinitInitParameters.
func (in *Scsi10CloudinitInitParameters) DeepCopy() *Scsi10CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CloudinitObservation) DeepCopyInto(out *Scsi10CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CloudinitObservation.
func (in *Scsi10CloudinitObservation) DeepCopy() *Scsi10CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10CloudinitParameters) DeepCopyInto(out *Scsi10CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10CloudinitParameters.
func (in *Scsi10CloudinitParameters) DeepCopy() *Scsi10CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10DiskInitParameters) DeepCopyInto(out *Scsi10DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10DiskInitParameters.
func (in *Scsi10DiskInitParameters) DeepCopy() *Scsi10DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10DiskObservation) DeepCopyInto(out *Scsi10DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10DiskObservation.
func (in *Scsi10DiskObservation) DeepCopy() *Scsi10DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10DiskParameters) DeepCopyInto(out *Scsi10DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10DiskParameters.
func (in *Scsi10DiskParameters) DeepCopy() *Scsi10DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10InitParameters) DeepCopyInto(out *Scsi10InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi10CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi10CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi10DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi10PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10InitParameters.
func (in *Scsi10InitParameters) DeepCopy() *Scsi10InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10Observation) DeepCopyInto(out *Scsi10Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi10CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi10CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi10DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi10PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10Observation.
func (in *Scsi10Observation) DeepCopy() *Scsi10Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi10Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10Parameters) DeepCopyInto(out *Scsi10Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi10CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi10CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi10DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi10PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10Parameters.
func (in *Scsi10Parameters) DeepCopy() *Scsi10Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10PassthroughInitParameters) DeepCopyInto(out *Scsi10PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10PassthroughInitParameters.
func (in *Scsi10PassthroughInitParameters) DeepCopy() *Scsi10PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10PassthroughObservation) DeepCopyInto(out *Scsi10PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10PassthroughObservation.
func (in *Scsi10PassthroughObservation) DeepCopy() *Scsi10PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi10PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi10PassthroughParameters) DeepCopyInto(out *Scsi10PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi10PassthroughParameters.
func (in *Scsi10PassthroughParameters) DeepCopy() *Scsi10PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi10PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CdromInitParameters) DeepCopyInto(out *Scsi11CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CdromInitParameters.
func (in *Scsi11CdromInitParameters) DeepCopy() *Scsi11CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CdromObservation) DeepCopyInto(out *Scsi11CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CdromObservation.
func (in *Scsi11CdromObservation) DeepCopy() *Scsi11CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CdromParameters) DeepCopyInto(out *Scsi11CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CdromParameters.
func (in *Scsi11CdromParameters) DeepCopy() *Scsi11CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CloudinitInitParameters) DeepCopyInto(out *Scsi11CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CloudinitInitParameters.
func (in *Scsi11CloudinitInitParameters) DeepCopy() *Scsi11CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CloudinitObservation) DeepCopyInto(out *Scsi11CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CloudinitObservation.
func (in *Scsi11CloudinitObservation) DeepCopy() *Scsi11CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11CloudinitParameters) DeepCopyInto(out *Scsi11CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11CloudinitParameters.
func (in *Scsi11CloudinitParameters) DeepCopy() *Scsi11CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11DiskInitParameters) DeepCopyInto(out *Scsi11DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11DiskInitParameters.
func (in *Scsi11DiskInitParameters) DeepCopy() *Scsi11DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11DiskObservation) DeepCopyInto(out *Scsi11DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11DiskObservation.
func (in *Scsi11DiskObservation) DeepCopy() *Scsi11DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11DiskParameters) DeepCopyInto(out *Scsi11DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11DiskParameters.
func (in *Scsi11DiskParameters) DeepCopy() *Scsi11DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11InitParameters) DeepCopyInto(out *Scsi11InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi11CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi11CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi11DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi11PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11InitParameters.
func (in *Scsi11InitParameters) DeepCopy() *Scsi11InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11Observation) DeepCopyInto(out *Scsi11Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi11CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi11CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi11DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi11PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11Observation.
func (in *Scsi11Observation) DeepCopy() *Scsi11Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11Parameters) DeepCopyInto(out *Scsi11Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi11CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi11CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi11DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi11PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11Parameters.
func (in *Scsi11Parameters) DeepCopy() *Scsi11Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11PassthroughInitParameters) DeepCopyInto(out *Scsi11PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11PassthroughInitParameters.
func (in *Scsi11PassthroughInitParameters) DeepCopy() *Scsi11PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11PassthroughObservation) DeepCopyInto(out *Scsi11PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11PassthroughObservation.
func (in *Scsi11PassthroughObservation) DeepCopy() *Scsi11PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi11PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi11PassthroughParameters) DeepCopyInto(out *Scsi11PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi11PassthroughParameters.
func (in *Scsi11PassthroughParameters) DeepCopy() *Scsi11PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi11PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CdromInitParameters) DeepCopyInto(out *Scsi12CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CdromInitParameters.
func (in *Scsi12CdromInitParameters) DeepCopy() *Scsi12CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CdromObservation) DeepCopyInto(out *Scsi12CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CdromObservation.
func (in *Scsi12CdromObservation) DeepCopy() *Scsi12CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CdromParameters) DeepCopyInto(out *Scsi12CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CdromParameters.
func (in *Scsi12CdromParameters) DeepCopy() *Scsi12CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CloudinitInitParameters) DeepCopyInto(out *Scsi12CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CloudinitInitParameters.
func (in *Scsi12CloudinitInitParameters) DeepCopy() *Scsi12CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CloudinitObservation) DeepCopyInto(out *Scsi12CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CloudinitObservation.
func (in *Scsi12CloudinitObservation) DeepCopy() *Scsi12CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12CloudinitParameters) DeepCopyInto(out *Scsi12CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12CloudinitParameters.
func (in *Scsi12CloudinitParameters) DeepCopy() *Scsi12CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12DiskInitParameters) DeepCopyInto(out *Scsi12DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12DiskInitParameters.
func (in *Scsi12DiskInitParameters) DeepCopy() *Scsi12DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12DiskObservation) DeepCopyInto(out *Scsi12DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12DiskObservation.
func (in *Scsi12DiskObservation) DeepCopy() *Scsi12DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12DiskParameters) DeepCopyInto(out *Scsi12DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12DiskParameters.
func (in *Scsi12DiskParameters) DeepCopy() *Scsi12DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12InitParameters) DeepCopyInto(out *Scsi12InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi12CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi12CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi12DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi12PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12InitParameters.
func (in *Scsi12InitParameters) DeepCopy() *Scsi12InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12Observation) DeepCopyInto(out *Scsi12Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi12CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi12CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi12DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi12PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12Observation.
func (in *Scsi12Observation) DeepCopy() *Scsi12Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi12Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12Parameters) DeepCopyInto(out *Scsi12Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi12CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi12CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi12DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi12PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12Parameters.
func (in *Scsi12Parameters) DeepCopy() *Scsi12Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12PassthroughInitParameters) DeepCopyInto(out *Scsi12PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12PassthroughInitParameters.
func (in *Scsi12PassthroughInitParameters) DeepCopy() *Scsi12PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12PassthroughObservation) DeepCopyInto(out *Scsi12PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12PassthroughObservation.
func (in *Scsi12PassthroughObservation) DeepCopy() *Scsi12PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi12PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi12PassthroughParameters) DeepCopyInto(out *Scsi12PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi12PassthroughParameters.
func (in *Scsi12PassthroughParameters) DeepCopy() *Scsi12PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi12PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CdromInitParameters) DeepCopyInto(out *Scsi13CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CdromInitParameters.
func (in *Scsi13CdromInitParameters) DeepCopy() *Scsi13CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CdromObservation) DeepCopyInto(out *Scsi13CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CdromObservation.
func (in *Scsi13CdromObservation) DeepCopy() *Scsi13CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CdromParameters) DeepCopyInto(out *Scsi13CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CdromParameters.
func (in *Scsi13CdromParameters) DeepCopy() *Scsi13CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CloudinitInitParameters) DeepCopyInto(out *Scsi13CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CloudinitInitParameters.
func (in *Scsi13CloudinitInitParameters) DeepCopy() *Scsi13CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CloudinitObservation) DeepCopyInto(out *Scsi13CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CloudinitObservation.
func (in *Scsi13CloudinitObservation) DeepCopy() *Scsi13CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13CloudinitParameters) DeepCopyInto(out *Scsi13CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13CloudinitParameters.
func (in *Scsi13CloudinitParameters) DeepCopy() *Scsi13CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13DiskInitParameters) DeepCopyInto(out *Scsi13DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13DiskInitParameters.
func (in *Scsi13DiskInitParameters) DeepCopy() *Scsi13DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13DiskObservation) DeepCopyInto(out *Scsi13DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13DiskObservation.
func (in *Scsi13DiskObservation) DeepCopy() *Scsi13DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13DiskParameters) DeepCopyInto(out *Scsi13DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13DiskParameters.
func (in *Scsi13DiskParameters) DeepCopy() *Scsi13DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13InitParameters) DeepCopyInto(out *Scsi13InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi13CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi13CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi13DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi13PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13InitParameters.
func (in *Scsi13InitParameters) DeepCopy() *Scsi13InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13Observation) DeepCopyInto(out *Scsi13Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi13CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi13CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi13DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi13PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13Observation.
func (in *Scsi13Observation) DeepCopy() *Scsi13Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi13Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13Parameters) DeepCopyInto(out *Scsi13Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi13CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi13CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi13DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi13PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13Parameters.
func (in *Scsi13Parameters) DeepCopy() *Scsi13Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13PassthroughInitParameters) DeepCopyInto(out *Scsi13PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13PassthroughInitParameters.
func (in *Scsi13PassthroughInitParameters) DeepCopy() *Scsi13PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13PassthroughObservation) DeepCopyInto(out *Scsi13PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13PassthroughObservation.
func (in *Scsi13PassthroughObservation) DeepCopy() *Scsi13PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi13PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi13PassthroughParameters) DeepCopyInto(out *Scsi13PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi13PassthroughParameters.
func (in *Scsi13PassthroughParameters) DeepCopy() *Scsi13PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi13PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CdromInitParameters) DeepCopyInto(out *Scsi14CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CdromInitParameters.
func (in *Scsi14CdromInitParameters) DeepCopy() *Scsi14CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CdromObservation) DeepCopyInto(out *Scsi14CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CdromObservation.
func (in *Scsi14CdromObservation) DeepCopy() *Scsi14CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CdromParameters) DeepCopyInto(out *Scsi14CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CdromParameters.
func (in *Scsi14CdromParameters) DeepCopy() *Scsi14CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CloudinitInitParameters) DeepCopyInto(out *Scsi14CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CloudinitInitParameters.
func (in *Scsi14CloudinitInitParameters) DeepCopy() *Scsi14CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CloudinitObservation) DeepCopyInto(out *Scsi14CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CloudinitObservation.
func (in *Scsi14CloudinitObservation) DeepCopy() *Scsi14CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14CloudinitParameters) DeepCopyInto(out *Scsi14CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14CloudinitParameters.
func (in *Scsi14CloudinitParameters) DeepCopy() *Scsi14CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14DiskInitParameters) DeepCopyInto(out *Scsi14DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14DiskInitParameters.
func (in *Scsi14DiskInitParameters) DeepCopy() *Scsi14DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14DiskObservation) DeepCopyInto(out *Scsi14DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14DiskObservation.
func (in *Scsi14DiskObservation) DeepCopy() *Scsi14DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14DiskParameters) DeepCopyInto(out *Scsi14DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14DiskParameters.
func (in *Scsi14DiskParameters) DeepCopy() *Scsi14DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14InitParameters) DeepCopyInto(out *Scsi14InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi14CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi14CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi14DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi14PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14InitParameters.
func (in *Scsi14InitParameters) DeepCopy() *Scsi14InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14Observation) DeepCopyInto(out *Scsi14Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi14CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi14CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi14DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi14PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14Observation.
func (in *Scsi14Observation) DeepCopy() *Scsi14Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi14Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14Parameters) DeepCopyInto(out *Scsi14Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi14CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi14CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi14DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi14PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14Parameters.
func (in *Scsi14Parameters) DeepCopy() *Scsi14Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14PassthroughInitParameters) DeepCopyInto(out *Scsi14PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14PassthroughInitParameters.
func (in *Scsi14PassthroughInitParameters) DeepCopy() *Scsi14PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14PassthroughObservation) DeepCopyInto(out *Scsi14PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14PassthroughObservation.
func (in *Scsi14PassthroughObservation) DeepCopy() *Scsi14PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi14PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi14PassthroughParameters) DeepCopyInto(out *Scsi14PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi14PassthroughParameters.
func (in *Scsi14PassthroughParameters) DeepCopy() *Scsi14PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi14PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CdromInitParameters) DeepCopyInto(out *Scsi15CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CdromInitParameters.
func (in *Scsi15CdromInitParameters) DeepCopy() *Scsi15CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CdromObservation) DeepCopyInto(out *Scsi15CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CdromObservation.
func (in *Scsi15CdromObservation) DeepCopy() *Scsi15CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CdromParameters) DeepCopyInto(out *Scsi15CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CdromParameters.
func (in *Scsi15CdromParameters) DeepCopy() *Scsi15CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CloudinitInitParameters) DeepCopyInto(out *Scsi15CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CloudinitInitParameters.
func (in *Scsi15CloudinitInitParameters) DeepCopy() *Scsi15CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CloudinitObservation) DeepCopyInto(out *Scsi15CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CloudinitObservation.
func (in *Scsi15CloudinitObservation) DeepCopy() *Scsi15CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15CloudinitParameters) DeepCopyInto(out *Scsi15CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15CloudinitParameters.
func (in *Scsi15CloudinitParameters) DeepCopy() *Scsi15CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15DiskInitParameters) DeepCopyInto(out *Scsi15DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15DiskInitParameters.
func (in *Scsi15DiskInitParameters) DeepCopy() *Scsi15DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15DiskObservation) DeepCopyInto(out *Scsi15DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15DiskObservation.
func (in *Scsi15DiskObservation) DeepCopy() *Scsi15DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15DiskParameters) DeepCopyInto(out *Scsi15DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15DiskParameters.
func (in *Scsi15DiskParameters) DeepCopy() *Scsi15DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15InitParameters) DeepCopyInto(out *Scsi15InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi15CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi15CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi15DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi15PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15InitParameters.
func (in *Scsi15InitParameters) DeepCopy() *Scsi15InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15Observation) DeepCopyInto(out *Scsi15Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi15CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi15CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi15DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi15PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15Observation.
func (in *Scsi15Observation) DeepCopy() *Scsi15Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi15Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15Parameters) DeepCopyInto(out *Scsi15Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi15CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi15CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi15DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi15PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15Parameters.
func (in *Scsi15Parameters) DeepCopy() *Scsi15Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15PassthroughInitParameters) DeepCopyInto(out *Scsi15PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15PassthroughInitParameters.
func (in *Scsi15PassthroughInitParameters) DeepCopy() *Scsi15PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15PassthroughObservation) DeepCopyInto(out *Scsi15PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15PassthroughObservation.
func (in *Scsi15PassthroughObservation) DeepCopy() *Scsi15PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi15PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi15PassthroughParameters) DeepCopyInto(out *Scsi15PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi15PassthroughParameters.
func (in *Scsi15PassthroughParameters) DeepCopy() *Scsi15PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi15PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CdromInitParameters) DeepCopyInto(out *Scsi16CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CdromInitParameters.
func (in *Scsi16CdromInitParameters) DeepCopy() *Scsi16CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CdromObservation) DeepCopyInto(out *Scsi16CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CdromObservation.
func (in *Scsi16CdromObservation) DeepCopy() *Scsi16CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CdromParameters) DeepCopyInto(out *Scsi16CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CdromParameters.
func (in *Scsi16CdromParameters) DeepCopy() *Scsi16CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CloudinitInitParameters) DeepCopyInto(out *Scsi16CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CloudinitInitParameters.
func (in *Scsi16CloudinitInitParameters) DeepCopy() *Scsi16CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CloudinitObservation) DeepCopyInto(out *Scsi16CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CloudinitObservation.
func (in *Scsi16CloudinitObservation) DeepCopy() *Scsi16CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16CloudinitParameters) DeepCopyInto(out *Scsi16CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16CloudinitParameters.
func (in *Scsi16CloudinitParameters) DeepCopy() *Scsi16CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16DiskInitParameters) DeepCopyInto(out *Scsi16DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16DiskInitParameters.
func (in *Scsi16DiskInitParameters) DeepCopy() *Scsi16DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16DiskObservation) DeepCopyInto(out *Scsi16DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16DiskObservation.
func (in *Scsi16DiskObservation) DeepCopy() *Scsi16DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16DiskParameters) DeepCopyInto(out *Scsi16DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16DiskParameters.
func (in *Scsi16DiskParameters) DeepCopy() *Scsi16DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16InitParameters) DeepCopyInto(out *Scsi16InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi16CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi16CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi16DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi16PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16InitParameters.
func (in *Scsi16InitParameters) DeepCopy() *Scsi16InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16Observation) DeepCopyInto(out *Scsi16Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi16CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi16CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi16DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi16PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16Observation.
func (in *Scsi16Observation) DeepCopy() *Scsi16Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi16Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16Parameters) DeepCopyInto(out *Scsi16Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi16CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi16CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi16DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi16PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16Parameters.
func (in *Scsi16Parameters) DeepCopy() *Scsi16Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16PassthroughInitParameters) DeepCopyInto(out *Scsi16PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16PassthroughInitParameters.
func (in *Scsi16PassthroughInitParameters) DeepCopy() *Scsi16PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16PassthroughObservation) DeepCopyInto(out *Scsi16PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16PassthroughObservation.
func (in *Scsi16PassthroughObservation) DeepCopy() *Scsi16PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi16PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi16PassthroughParameters) DeepCopyInto(out *Scsi16PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi16PassthroughParameters.
func (in *Scsi16PassthroughParameters) DeepCopy() *Scsi16PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi16PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CdromInitParameters) DeepCopyInto(out *Scsi17CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CdromInitParameters.
func (in *Scsi17CdromInitParameters) DeepCopy() *Scsi17CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CdromObservation) DeepCopyInto(out *Scsi17CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CdromObservation.
func (in *Scsi17CdromObservation) DeepCopy() *Scsi17CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CdromParameters) DeepCopyInto(out *Scsi17CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CdromParameters.
func (in *Scsi17CdromParameters) DeepCopy() *Scsi17CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CloudinitInitParameters) DeepCopyInto(out *Scsi17CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CloudinitInitParameters.
func (in *Scsi17CloudinitInitParameters) DeepCopy() *Scsi17CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CloudinitObservation) DeepCopyInto(out *Scsi17CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CloudinitObservation.
func (in *Scsi17CloudinitObservation) DeepCopy() *Scsi17CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17CloudinitParameters) DeepCopyInto(out *Scsi17CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17CloudinitParameters.
func (in *Scsi17CloudinitParameters) DeepCopy() *Scsi17CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17DiskInitParameters) DeepCopyInto(out *Scsi17DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17DiskInitParameters.
func (in *Scsi17DiskInitParameters) DeepCopy() *Scsi17DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17DiskObservation) DeepCopyInto(out *Scsi17DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17DiskObservation.
func (in *Scsi17DiskObservation) DeepCopy() *Scsi17DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17DiskParameters) DeepCopyInto(out *Scsi17DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17DiskParameters.
func (in *Scsi17DiskParameters) DeepCopy() *Scsi17DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17InitParameters) DeepCopyInto(out *Scsi17InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi17CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi17CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi17DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi17PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17InitParameters.
func (in *Scsi17InitParameters) DeepCopy() *Scsi17InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17Observation) DeepCopyInto(out *Scsi17Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi17CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi17CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi17DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi17PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17Observation.
func (in *Scsi17Observation) DeepCopy() *Scsi17Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi17Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17Parameters) DeepCopyInto(out *Scsi17Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi17CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi17CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi17DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi17PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17Parameters.
func (in *Scsi17Parameters) DeepCopy() *Scsi17Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17PassthroughInitParameters) DeepCopyInto(out *Scsi17PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17PassthroughInitParameters.
func (in *Scsi17PassthroughInitParameters) DeepCopy() *Scsi17PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17PassthroughObservation) DeepCopyInto(out *Scsi17PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17PassthroughObservation.
func (in *Scsi17PassthroughObservation) DeepCopy() *Scsi17PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi17PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi17PassthroughParameters) DeepCopyInto(out *Scsi17PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi17PassthroughParameters.
func (in *Scsi17PassthroughParameters) DeepCopy() *Scsi17PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi17PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CdromInitParameters) DeepCopyInto(out *Scsi18CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CdromInitParameters.
func (in *Scsi18CdromInitParameters) DeepCopy() *Scsi18CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CdromObservation) DeepCopyInto(out *Scsi18CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CdromObservation.
func (in *Scsi18CdromObservation) DeepCopy() *Scsi18CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CdromParameters) DeepCopyInto(out *Scsi18CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CdromParameters.
func (in *Scsi18CdromParameters) DeepCopy() *Scsi18CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CloudinitInitParameters) DeepCopyInto(out *Scsi18CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CloudinitInitParameters.
func (in *Scsi18CloudinitInitParameters) DeepCopy() *Scsi18CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CloudinitObservation) DeepCopyInto(out *Scsi18CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CloudinitObservation.
func (in *Scsi18CloudinitObservation) DeepCopy() *Scsi18CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18CloudinitParameters) DeepCopyInto(out *Scsi18CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18CloudinitParameters.
func (in *Scsi18CloudinitParameters) DeepCopy() *Scsi18CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18DiskInitParameters) DeepCopyInto(out *Scsi18DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18DiskInitParameters.
func (in *Scsi18DiskInitParameters) DeepCopy() *Scsi18DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18DiskObservation) DeepCopyInto(out *Scsi18DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18DiskObservation.
func (in *Scsi18DiskObservation) DeepCopy() *Scsi18DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18DiskParameters) DeepCopyInto(out *Scsi18DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18DiskParameters.
func (in *Scsi18DiskParameters) DeepCopy() *Scsi18DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18InitParameters) DeepCopyInto(out *Scsi18InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi18CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi18CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi18DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi18PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18InitParameters.
func (in *Scsi18InitParameters) DeepCopy() *Scsi18InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18Observation) DeepCopyInto(out *Scsi18Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi18CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi18CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi18DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi18PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18Observation.
func (in *Scsi18Observation) DeepCopy() *Scsi18Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi18Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18Parameters) DeepCopyInto(out *Scsi18Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi18CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi18CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi18DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi18PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18Parameters.
func (in *Scsi18Parameters) DeepCopy() *Scsi18Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18PassthroughInitParameters) DeepCopyInto(out *Scsi18PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18PassthroughInitParameters.
func (in *Scsi18PassthroughInitParameters) DeepCopy() *Scsi18PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18PassthroughObservation) DeepCopyInto(out *Scsi18PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18PassthroughObservation.
func (in *Scsi18PassthroughObservation) DeepCopy() *Scsi18PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi18PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi18PassthroughParameters) DeepCopyInto(out *Scsi18PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi18PassthroughParameters.
func (in *Scsi18PassthroughParameters) DeepCopy() *Scsi18PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi18PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CdromInitParameters) DeepCopyInto(out *Scsi19CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CdromInitParameters.
func (in *Scsi19CdromInitParameters) DeepCopy() *Scsi19CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CdromObservation) DeepCopyInto(out *Scsi19CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CdromObservation.
func (in *Scsi19CdromObservation) DeepCopy() *Scsi19CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CdromParameters) DeepCopyInto(out *Scsi19CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CdromParameters.
func (in *Scsi19CdromParameters) DeepCopy() *Scsi19CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CloudinitInitParameters) DeepCopyInto(out *Scsi19CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CloudinitInitParameters.
func (in *Scsi19CloudinitInitParameters) DeepCopy() *Scsi19CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CloudinitObservation) DeepCopyInto(out *Scsi19CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CloudinitObservation.
func (in *Scsi19CloudinitObservation) DeepCopy() *Scsi19CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19CloudinitParameters) DeepCopyInto(out *Scsi19CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19CloudinitParameters.
func (in *Scsi19CloudinitParameters) DeepCopy() *Scsi19CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19DiskInitParameters) DeepCopyInto(out *Scsi19DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19DiskInitParameters.
func (in *Scsi19DiskInitParameters) DeepCopy() *Scsi19DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19DiskObservation) DeepCopyInto(out *Scsi19DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19DiskObservation.
func (in *Scsi19DiskObservation) DeepCopy() *Scsi19DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19DiskParameters) DeepCopyInto(out *Scsi19DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19DiskParameters.
func (in *Scsi19DiskParameters) DeepCopy() *Scsi19DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19InitParameters) DeepCopyInto(out *Scsi19InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi19CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi19CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi19DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi19PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19InitParameters.
func (in *Scsi19InitParameters) DeepCopy() *Scsi19InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19Observation) DeepCopyInto(out *Scsi19Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi19CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi19CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi19DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi19PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19Observation.
func (in *Scsi19Observation) DeepCopy() *Scsi19Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi19Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19Parameters) DeepCopyInto(out *Scsi19Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi19CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi19CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi19DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi19PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19Parameters.
func (in *Scsi19Parameters) DeepCopy() *Scsi19Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19PassthroughInitParameters) DeepCopyInto(out *Scsi19PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19PassthroughInitParameters.
func (in *Scsi19PassthroughInitParameters) DeepCopy() *Scsi19PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19PassthroughObservation) DeepCopyInto(out *Scsi19PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19PassthroughObservation.
func (in *Scsi19PassthroughObservation) DeepCopy() *Scsi19PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi19PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi19PassthroughParameters) DeepCopyInto(out *Scsi19PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi19PassthroughParameters.
func (in *Scsi19PassthroughParameters) DeepCopy() *Scsi19PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi19PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CdromInitParameters) DeepCopyInto(out *Scsi1CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CdromInitParameters.
func (in *Scsi1CdromInitParameters) DeepCopy() *Scsi1CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CdromObservation) DeepCopyInto(out *Scsi1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CdromObservation.
func (in *Scsi1CdromObservation) DeepCopy() *Scsi1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CdromParameters) DeepCopyInto(out *Scsi1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CdromParameters.
func (in *Scsi1CdromParameters) DeepCopy() *Scsi1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CloudinitInitParameters) DeepCopyInto(out *Scsi1CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CloudinitInitParameters.
func (in *Scsi1CloudinitInitParameters) DeepCopy() *Scsi1CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CloudinitObservation) DeepCopyInto(out *Scsi1CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CloudinitObservation.
func (in *Scsi1CloudinitObservation) DeepCopy() *Scsi1CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1CloudinitParameters) DeepCopyInto(out *Scsi1CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1CloudinitParameters.
func (in *Scsi1CloudinitParameters) DeepCopy() *Scsi1CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1DiskInitParameters) DeepCopyInto(out *Scsi1DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1DiskInitParameters.
func (in *Scsi1DiskInitParameters) DeepCopy() *Scsi1DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1DiskObservation) DeepCopyInto(out *Scsi1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1DiskObservation.
func (in *Scsi1DiskObservation) DeepCopy() *Scsi1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1DiskParameters) DeepCopyInto(out *Scsi1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1DiskParameters.
func (in *Scsi1DiskParameters) DeepCopy() *Scsi1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1InitParameters) DeepCopyInto(out *Scsi1InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi1CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi1CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi1DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi1PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1InitParameters.
func (in *Scsi1InitParameters) DeepCopy() *Scsi1InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1Observation) DeepCopyInto(out *Scsi1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi1CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1Observation.
func (in *Scsi1Observation) DeepCopy() *Scsi1Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1Parameters) DeepCopyInto(out *Scsi1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi1CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1Parameters.
func (in *Scsi1Parameters) DeepCopy() *Scsi1Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1PassthroughInitParameters) DeepCopyInto(out *Scsi1PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1PassthroughInitParameters.
func (in *Scsi1PassthroughInitParameters) DeepCopy() *Scsi1PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1PassthroughObservation) DeepCopyInto(out *Scsi1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1PassthroughObservation.
func (in *Scsi1PassthroughObservation) DeepCopy() *Scsi1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi1PassthroughParameters) DeepCopyInto(out *Scsi1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi1PassthroughParameters.
func (in *Scsi1PassthroughParameters) DeepCopy() *Scsi1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CdromInitParameters) DeepCopyInto(out *Scsi20CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CdromInitParameters.
func (in *Scsi20CdromInitParameters) DeepCopy() *Scsi20CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CdromObservation) DeepCopyInto(out *Scsi20CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CdromObservation.
func (in *Scsi20CdromObservation) DeepCopy() *Scsi20CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CdromParameters) DeepCopyInto(out *Scsi20CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CdromParameters.
func (in *Scsi20CdromParameters) DeepCopy() *Scsi20CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CloudinitInitParameters) DeepCopyInto(out *Scsi20CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CloudinitInitParameters.
func (in *Scsi20CloudinitInitParameters) DeepCopy() *Scsi20CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CloudinitObservation) DeepCopyInto(out *Scsi20CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CloudinitObservation.
func (in *Scsi20CloudinitObservation) DeepCopy() *Scsi20CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20CloudinitParameters) DeepCopyInto(out *Scsi20CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20CloudinitParameters.
func (in *Scsi20CloudinitParameters) DeepCopy() *Scsi20CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20DiskInitParameters) DeepCopyInto(out *Scsi20DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20DiskInitParameters.
func (in *Scsi20DiskInitParameters) DeepCopy() *Scsi20DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20DiskObservation) DeepCopyInto(out *Scsi20DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20DiskObservation.
func (in *Scsi20DiskObservation) DeepCopy() *Scsi20DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20DiskParameters) DeepCopyInto(out *Scsi20DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20DiskParameters.
func (in *Scsi20DiskParameters) DeepCopy() *Scsi20DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20InitParameters) DeepCopyInto(out *Scsi20InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi20CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi20CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi20DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi20PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20InitParameters.
func (in *Scsi20InitParameters) DeepCopy() *Scsi20InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20Observation) DeepCopyInto(out *Scsi20Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi20CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi20CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi20DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi20PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20Observation.
func (in *Scsi20Observation) DeepCopy() *Scsi20Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi20Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20Parameters) DeepCopyInto(out *Scsi20Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi20CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi20CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi20DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi20PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20Parameters.
func (in *Scsi20Parameters) DeepCopy() *Scsi20Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20PassthroughInitParameters) DeepCopyInto(out *Scsi20PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20PassthroughInitParameters.
func (in *Scsi20PassthroughInitParameters) DeepCopy() *Scsi20PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20PassthroughObservation) DeepCopyInto(out *Scsi20PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20PassthroughObservation.
func (in *Scsi20PassthroughObservation) DeepCopy() *Scsi20PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi20PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi20PassthroughParameters) DeepCopyInto(out *Scsi20PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi20PassthroughParameters.
func (in *Scsi20PassthroughParameters) DeepCopy() *Scsi20PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi20PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CdromInitParameters) DeepCopyInto(out *Scsi21CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CdromInitParameters.
func (in *Scsi21CdromInitParameters) DeepCopy() *Scsi21CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CdromObservation) DeepCopyInto(out *Scsi21CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CdromObservation.
func (in *Scsi21CdromObservation) DeepCopy() *Scsi21CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CdromParameters) DeepCopyInto(out *Scsi21CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CdromParameters.
func (in *Scsi21CdromParameters) DeepCopy() *Scsi21CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CloudinitInitParameters) DeepCopyInto(out *Scsi21CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CloudinitInitParameters.
func (in *Scsi21CloudinitInitParameters) DeepCopy() *Scsi21CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CloudinitObservation) DeepCopyInto(out *Scsi21CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CloudinitObservation.
func (in *Scsi21CloudinitObservation) DeepCopy() *Scsi21CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21CloudinitParameters) DeepCopyInto(out *Scsi21CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21CloudinitParameters.
func (in *Scsi21CloudinitParameters) DeepCopy() *Scsi21CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21DiskInitParameters) DeepCopyInto(out *Scsi21DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21DiskInitParameters.
func (in *Scsi21DiskInitParameters) DeepCopy() *Scsi21DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21DiskObservation) DeepCopyInto(out *Scsi21DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21DiskObservation.
func (in *Scsi21DiskObservation) DeepCopy() *Scsi21DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21DiskParameters) DeepCopyInto(out *Scsi21DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21DiskParameters.
func (in *Scsi21DiskParameters) DeepCopy() *Scsi21DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21InitParameters) DeepCopyInto(out *Scsi21InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi21CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi21CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi21DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi21PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21InitParameters.
func (in *Scsi21InitParameters) DeepCopy() *Scsi21InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21Observation) DeepCopyInto(out *Scsi21Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi21CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi21CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi21DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi21PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21Observation.
func (in *Scsi21Observation) DeepCopy() *Scsi21Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi21Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21Parameters) DeepCopyInto(out *Scsi21Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi21CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi21CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi21DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi21PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21Parameters.
func (in *Scsi21Parameters) DeepCopy() *Scsi21Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21PassthroughInitParameters) DeepCopyInto(out *Scsi21PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21PassthroughInitParameters.
func (in *Scsi21PassthroughInitParameters) DeepCopy() *Scsi21PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21PassthroughObservation) DeepCopyInto(out *Scsi21PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21PassthroughObservation.
func (in *Scsi21PassthroughObservation) DeepCopy() *Scsi21PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi21PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi21PassthroughParameters) DeepCopyInto(out *Scsi21PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi21PassthroughParameters.
func (in *Scsi21PassthroughParameters) DeepCopy() *Scsi21PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi21PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CdromInitParameters) DeepCopyInto(out *Scsi22CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CdromInitParameters.
func (in *Scsi22CdromInitParameters) DeepCopy() *Scsi22CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CdromObservation) DeepCopyInto(out *Scsi22CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CdromObservation.
func (in *Scsi22CdromObservation) DeepCopy() *Scsi22CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CdromParameters) DeepCopyInto(out *Scsi22CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CdromParameters.
func (in *Scsi22CdromParameters) DeepCopy() *Scsi22CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CloudinitInitParameters) DeepCopyInto(out *Scsi22CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CloudinitInitParameters.
func (in *Scsi22CloudinitInitParameters) DeepCopy() *Scsi22CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CloudinitObservation) DeepCopyInto(out *Scsi22CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CloudinitObservation.
func (in *Scsi22CloudinitObservation) DeepCopy() *Scsi22CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22CloudinitParameters) DeepCopyInto(out *Scsi22CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22CloudinitParameters.
func (in *Scsi22CloudinitParameters) DeepCopy() *Scsi22CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22DiskInitParameters) DeepCopyInto(out *Scsi22DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22DiskInitParameters.
func (in *Scsi22DiskInitParameters) DeepCopy() *Scsi22DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22DiskObservation) DeepCopyInto(out *Scsi22DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22DiskObservation.
func (in *Scsi22DiskObservation) DeepCopy() *Scsi22DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22DiskParameters) DeepCopyInto(out *Scsi22DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22DiskParameters.
func (in *Scsi22DiskParameters) DeepCopy() *Scsi22DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22InitParameters) DeepCopyInto(out *Scsi22InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi22CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi22CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi22DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi22PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22InitParameters.
func (in *Scsi22InitParameters) DeepCopy() *Scsi22InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22Observation) DeepCopyInto(out *Scsi22Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi22CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi22CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi22DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi22PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22Observation.
func (in *Scsi22Observation) DeepCopy() *Scsi22Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi22Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22Parameters) DeepCopyInto(out *Scsi22Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi22CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi22CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi22DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi22PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22Parameters.
func (in *Scsi22Parameters) DeepCopy() *Scsi22Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22PassthroughInitParameters) DeepCopyInto(out *Scsi22PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22PassthroughInitParameters.
func (in *Scsi22PassthroughInitParameters) DeepCopy() *Scsi22PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22PassthroughObservation) DeepCopyInto(out *Scsi22PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22PassthroughObservation.
func (in *Scsi22PassthroughObservation) DeepCopy() *Scsi22PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi22PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi22PassthroughParameters) DeepCopyInto(out *Scsi22PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi22PassthroughParameters.
func (in *Scsi22PassthroughParameters) DeepCopy() *Scsi22PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi22PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CdromInitParameters) DeepCopyInto(out *Scsi23CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CdromInitParameters.
func (in *Scsi23CdromInitParameters) DeepCopy() *Scsi23CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CdromObservation) DeepCopyInto(out *Scsi23CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CdromObservation.
func (in *Scsi23CdromObservation) DeepCopy() *Scsi23CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CdromParameters) DeepCopyInto(out *Scsi23CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CdromParameters.
func (in *Scsi23CdromParameters) DeepCopy() *Scsi23CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CloudinitInitParameters) DeepCopyInto(out *Scsi23CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CloudinitInitParameters.
func (in *Scsi23CloudinitInitParameters) DeepCopy() *Scsi23CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CloudinitObservation) DeepCopyInto(out *Scsi23CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CloudinitObservation.
func (in *Scsi23CloudinitObservation) DeepCopy() *Scsi23CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23CloudinitParameters) DeepCopyInto(out *Scsi23CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23CloudinitParameters.
func (in *Scsi23CloudinitParameters) DeepCopy() *Scsi23CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23DiskInitParameters) DeepCopyInto(out *Scsi23DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23DiskInitParameters.
func (in *Scsi23DiskInitParameters) DeepCopy() *Scsi23DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23DiskObservation) DeepCopyInto(out *Scsi23DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23DiskObservation.
func (in *Scsi23DiskObservation) DeepCopy() *Scsi23DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23DiskParameters) DeepCopyInto(out *Scsi23DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23DiskParameters.
func (in *Scsi23DiskParameters) DeepCopy() *Scsi23DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23InitParameters) DeepCopyInto(out *Scsi23InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi23CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi23CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi23DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi23PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23InitParameters.
func (in *Scsi23InitParameters) DeepCopy() *Scsi23InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23Observation) DeepCopyInto(out *Scsi23Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi23CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi23CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi23DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi23PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23Observation.
func (in *Scsi23Observation) DeepCopy() *Scsi23Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi23Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23Parameters) DeepCopyInto(out *Scsi23Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi23CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi23CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi23DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi23PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23Parameters.
func (in *Scsi23Parameters) DeepCopy() *Scsi23Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23PassthroughInitParameters) DeepCopyInto(out *Scsi23PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23PassthroughInitParameters.
func (in *Scsi23PassthroughInitParameters) DeepCopy() *Scsi23PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23PassthroughObservation) DeepCopyInto(out *Scsi23PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23PassthroughObservation.
func (in *Scsi23PassthroughObservation) DeepCopy() *Scsi23PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi23PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi23PassthroughParameters) DeepCopyInto(out *Scsi23PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi23PassthroughParameters.
func (in *Scsi23PassthroughParameters) DeepCopy() *Scsi23PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi23PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CdromInitParameters) DeepCopyInto(out *Scsi24CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CdromInitParameters.
func (in *Scsi24CdromInitParameters) DeepCopy() *Scsi24CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CdromObservation) DeepCopyInto(out *Scsi24CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CdromObservation.
func (in *Scsi24CdromObservation) DeepCopy() *Scsi24CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CdromParameters) DeepCopyInto(out *Scsi24CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CdromParameters.
func (in *Scsi24CdromParameters) DeepCopy() *Scsi24CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CloudinitInitParameters) DeepCopyInto(out *Scsi24CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CloudinitInitParameters.
func (in *Scsi24CloudinitInitParameters) DeepCopy() *Scsi24CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CloudinitObservation) DeepCopyInto(out *Scsi24CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CloudinitObservation.
func (in *Scsi24CloudinitObservation) DeepCopy() *Scsi24CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24CloudinitParameters) DeepCopyInto(out *Scsi24CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24CloudinitParameters.
func (in *Scsi24CloudinitParameters) DeepCopy() *Scsi24CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24DiskInitParameters) DeepCopyInto(out *Scsi24DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24DiskInitParameters.
func (in *Scsi24DiskInitParameters) DeepCopy() *Scsi24DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24DiskObservation) DeepCopyInto(out *Scsi24DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24DiskObservation.
func (in *Scsi24DiskObservation) DeepCopy() *Scsi24DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24DiskParameters) DeepCopyInto(out *Scsi24DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24DiskParameters.
func (in *Scsi24DiskParameters) DeepCopy() *Scsi24DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24InitParameters) DeepCopyInto(out *Scsi24InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi24CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi24CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi24DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi24PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24InitParameters.
func (in *Scsi24InitParameters) DeepCopy() *Scsi24InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24Observation) DeepCopyInto(out *Scsi24Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi24CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi24CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi24DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi24PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24Observation.
func (in *Scsi24Observation) DeepCopy() *Scsi24Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi24Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24Parameters) DeepCopyInto(out *Scsi24Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi24CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi24CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi24DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi24PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24Parameters.
func (in *Scsi24Parameters) DeepCopy() *Scsi24Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24PassthroughInitParameters) DeepCopyInto(out *Scsi24PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24PassthroughInitParameters.
func (in *Scsi24PassthroughInitParameters) DeepCopy() *Scsi24PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24PassthroughObservation) DeepCopyInto(out *Scsi24PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24PassthroughObservation.
func (in *Scsi24PassthroughObservation) DeepCopy() *Scsi24PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi24PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi24PassthroughParameters) DeepCopyInto(out *Scsi24PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi24PassthroughParameters.
func (in *Scsi24PassthroughParameters) DeepCopy() *Scsi24PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi24PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CdromInitParameters) DeepCopyInto(out *Scsi25CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CdromInitParameters.
func (in *Scsi25CdromInitParameters) DeepCopy() *Scsi25CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CdromObservation) DeepCopyInto(out *Scsi25CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CdromObservation.
func (in *Scsi25CdromObservation) DeepCopy() *Scsi25CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CdromParameters) DeepCopyInto(out *Scsi25CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CdromParameters.
func (in *Scsi25CdromParameters) DeepCopy() *Scsi25CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CloudinitInitParameters) DeepCopyInto(out *Scsi25CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CloudinitInitParameters.
func (in *Scsi25CloudinitInitParameters) DeepCopy() *Scsi25CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CloudinitObservation) DeepCopyInto(out *Scsi25CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CloudinitObservation.
func (in *Scsi25CloudinitObservation) DeepCopy() *Scsi25CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25CloudinitParameters) DeepCopyInto(out *Scsi25CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25CloudinitParameters.
func (in *Scsi25CloudinitParameters) DeepCopy() *Scsi25CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25DiskInitParameters) DeepCopyInto(out *Scsi25DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25DiskInitParameters.
func (in *Scsi25DiskInitParameters) DeepCopy() *Scsi25DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25DiskObservation) DeepCopyInto(out *Scsi25DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25DiskObservation.
func (in *Scsi25DiskObservation) DeepCopy() *Scsi25DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25DiskParameters) DeepCopyInto(out *Scsi25DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25DiskParameters.
func (in *Scsi25DiskParameters) DeepCopy() *Scsi25DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25InitParameters) DeepCopyInto(out *Scsi25InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi25CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi25CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi25DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi25PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25InitParameters.
func (in *Scsi25InitParameters) DeepCopy() *Scsi25InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25Observation) DeepCopyInto(out *Scsi25Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi25CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi25CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi25DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi25PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25Observation.
func (in *Scsi25Observation) DeepCopy() *Scsi25Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi25Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25Parameters) DeepCopyInto(out *Scsi25Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi25CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi25CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi25DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi25PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25Parameters.
func (in *Scsi25Parameters) DeepCopy() *Scsi25Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25PassthroughInitParameters) DeepCopyInto(out *Scsi25PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25PassthroughInitParameters.
func (in *Scsi25PassthroughInitParameters) DeepCopy() *Scsi25PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25PassthroughObservation) DeepCopyInto(out *Scsi25PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25PassthroughObservation.
func (in *Scsi25PassthroughObservation) DeepCopy() *Scsi25PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi25PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi25PassthroughParameters) DeepCopyInto(out *Scsi25PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi25PassthroughParameters.
func (in *Scsi25PassthroughParameters) DeepCopy() *Scsi25PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi25PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CdromInitParameters) DeepCopyInto(out *Scsi26CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CdromInitParameters.
func (in *Scsi26CdromInitParameters) DeepCopy() *Scsi26CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CdromObservation) DeepCopyInto(out *Scsi26CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CdromObservation.
func (in *Scsi26CdromObservation) DeepCopy() *Scsi26CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CdromParameters) DeepCopyInto(out *Scsi26CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CdromParameters.
func (in *Scsi26CdromParameters) DeepCopy() *Scsi26CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CloudinitInitParameters) DeepCopyInto(out *Scsi26CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CloudinitInitParameters.
func (in *Scsi26CloudinitInitParameters) DeepCopy() *Scsi26CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CloudinitObservation) DeepCopyInto(out *Scsi26CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CloudinitObservation.
func (in *Scsi26CloudinitObservation) DeepCopy() *Scsi26CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26CloudinitParameters) DeepCopyInto(out *Scsi26CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26CloudinitParameters.
func (in *Scsi26CloudinitParameters) DeepCopy() *Scsi26CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26DiskInitParameters) DeepCopyInto(out *Scsi26DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26DiskInitParameters.
func (in *Scsi26DiskInitParameters) DeepCopy() *Scsi26DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26DiskObservation) DeepCopyInto(out *Scsi26DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26DiskObservation.
func (in *Scsi26DiskObservation) DeepCopy() *Scsi26DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26DiskParameters) DeepCopyInto(out *Scsi26DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26DiskParameters.
func (in *Scsi26DiskParameters) DeepCopy() *Scsi26DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26InitParameters) DeepCopyInto(out *Scsi26InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi26CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi26CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi26DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi26PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26InitParameters.
func (in *Scsi26InitParameters) DeepCopy() *Scsi26InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26Observation) DeepCopyInto(out *Scsi26Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi26CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi26CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi26DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi26PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26Observation.
func (in *Scsi26Observation) DeepCopy() *Scsi26Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi26Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26Parameters) DeepCopyInto(out *Scsi26Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi26CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi26CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi26DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi26PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26Parameters.
func (in *Scsi26Parameters) DeepCopy() *Scsi26Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26PassthroughInitParameters) DeepCopyInto(out *Scsi26PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26PassthroughInitParameters.
func (in *Scsi26PassthroughInitParameters) DeepCopy() *Scsi26PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26PassthroughObservation) DeepCopyInto(out *Scsi26PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26PassthroughObservation.
func (in *Scsi26PassthroughObservation) DeepCopy() *Scsi26PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi26PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi26PassthroughParameters) DeepCopyInto(out *Scsi26PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi26PassthroughParameters.
func (in *Scsi26PassthroughParameters) DeepCopy() *Scsi26PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi26PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CdromInitParameters) DeepCopyInto(out *Scsi27CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CdromInitParameters.
func (in *Scsi27CdromInitParameters) DeepCopy() *Scsi27CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CdromObservation) DeepCopyInto(out *Scsi27CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CdromObservation.
func (in *Scsi27CdromObservation) DeepCopy() *Scsi27CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CdromParameters) DeepCopyInto(out *Scsi27CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CdromParameters.
func (in *Scsi27CdromParameters) DeepCopy() *Scsi27CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CloudinitInitParameters) DeepCopyInto(out *Scsi27CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CloudinitInitParameters.
func (in *Scsi27CloudinitInitParameters) DeepCopy() *Scsi27CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CloudinitObservation) DeepCopyInto(out *Scsi27CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CloudinitObservation.
func (in *Scsi27CloudinitObservation) DeepCopy() *Scsi27CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27CloudinitParameters) DeepCopyInto(out *Scsi27CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27CloudinitParameters.
func (in *Scsi27CloudinitParameters) DeepCopy() *Scsi27CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27DiskInitParameters) DeepCopyInto(out *Scsi27DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27DiskInitParameters.
func (in *Scsi27DiskInitParameters) DeepCopy() *Scsi27DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27DiskObservation) DeepCopyInto(out *Scsi27DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27DiskObservation.
func (in *Scsi27DiskObservation) DeepCopy() *Scsi27DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27DiskParameters) DeepCopyInto(out *Scsi27DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27DiskParameters.
func (in *Scsi27DiskParameters) DeepCopy() *Scsi27DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27InitParameters) DeepCopyInto(out *Scsi27InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi27CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi27CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi27DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi27PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27InitParameters.
func (in *Scsi27InitParameters) DeepCopy() *Scsi27InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27Observation) DeepCopyInto(out *Scsi27Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi27CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi27CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi27DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi27PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27Observation.
func (in *Scsi27Observation) DeepCopy() *Scsi27Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi27Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27Parameters) DeepCopyInto(out *Scsi27Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi27CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi27CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi27DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi27PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27Parameters.
func (in *Scsi27Parameters) DeepCopy() *Scsi27Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27PassthroughInitParameters) DeepCopyInto(out *Scsi27PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27PassthroughInitParameters.
func (in *Scsi27PassthroughInitParameters) DeepCopy() *Scsi27PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27PassthroughObservation) DeepCopyInto(out *Scsi27PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27PassthroughObservation.
func (in *Scsi27PassthroughObservation) DeepCopy() *Scsi27PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi27PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi27PassthroughParameters) DeepCopyInto(out *Scsi27PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi27PassthroughParameters.
func (in *Scsi27PassthroughParameters) DeepCopy() *Scsi27PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi27PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CdromInitParameters) DeepCopyInto(out *Scsi28CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CdromInitParameters.
func (in *Scsi28CdromInitParameters) DeepCopy() *Scsi28CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CdromObservation) DeepCopyInto(out *Scsi28CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CdromObservation.
func (in *Scsi28CdromObservation) DeepCopy() *Scsi28CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CdromParameters) DeepCopyInto(out *Scsi28CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CdromParameters.
func (in *Scsi28CdromParameters) DeepCopy() *Scsi28CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CloudinitInitParameters) DeepCopyInto(out *Scsi28CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CloudinitInitParameters.
func (in *Scsi28CloudinitInitParameters) DeepCopy() *Scsi28CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CloudinitObservation) DeepCopyInto(out *Scsi28CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CloudinitObservation.
func (in *Scsi28CloudinitObservation) DeepCopy() *Scsi28CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28CloudinitParameters) DeepCopyInto(out *Scsi28CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28CloudinitParameters.
func (in *Scsi28CloudinitParameters) DeepCopy() *Scsi28CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28DiskInitParameters) DeepCopyInto(out *Scsi28DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28DiskInitParameters.
func (in *Scsi28DiskInitParameters) DeepCopy() *Scsi28DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28DiskObservation) DeepCopyInto(out *Scsi28DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28DiskObservation.
func (in *Scsi28DiskObservation) DeepCopy() *Scsi28DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28DiskParameters) DeepCopyInto(out *Scsi28DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28DiskParameters.
func (in *Scsi28DiskParameters) DeepCopy() *Scsi28DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28InitParameters) DeepCopyInto(out *Scsi28InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi28CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi28CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi28DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi28PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28InitParameters.
func (in *Scsi28InitParameters) DeepCopy() *Scsi28InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28Observation) DeepCopyInto(out *Scsi28Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi28CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi28CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi28DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi28PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28Observation.
func (in *Scsi28Observation) DeepCopy() *Scsi28Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi28Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28Parameters) DeepCopyInto(out *Scsi28Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi28CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi28CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi28DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi28PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28Parameters.
func (in *Scsi28Parameters) DeepCopy() *Scsi28Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28PassthroughInitParameters) DeepCopyInto(out *Scsi28PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28PassthroughInitParameters.
func (in *Scsi28PassthroughInitParameters) DeepCopy() *Scsi28PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28PassthroughObservation) DeepCopyInto(out *Scsi28PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28PassthroughObservation.
func (in *Scsi28PassthroughObservation) DeepCopy() *Scsi28PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi28PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi28PassthroughParameters) DeepCopyInto(out *Scsi28PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi28PassthroughParameters.
func (in *Scsi28PassthroughParameters) DeepCopy() *Scsi28PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi28PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CdromInitParameters) DeepCopyInto(out *Scsi29CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CdromInitParameters.
func (in *Scsi29CdromInitParameters) DeepCopy() *Scsi29CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CdromObservation) DeepCopyInto(out *Scsi29CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CdromObservation.
func (in *Scsi29CdromObservation) DeepCopy() *Scsi29CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CdromParameters) DeepCopyInto(out *Scsi29CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CdromParameters.
func (in *Scsi29CdromParameters) DeepCopy() *Scsi29CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CloudinitInitParameters) DeepCopyInto(out *Scsi29CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CloudinitInitParameters.
func (in *Scsi29CloudinitInitParameters) DeepCopy() *Scsi29CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CloudinitObservation) DeepCopyInto(out *Scsi29CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CloudinitObservation.
func (in *Scsi29CloudinitObservation) DeepCopy() *Scsi29CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29CloudinitParameters) DeepCopyInto(out *Scsi29CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29CloudinitParameters.
func (in *Scsi29CloudinitParameters) DeepCopy() *Scsi29CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29DiskInitParameters) DeepCopyInto(out *Scsi29DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29DiskInitParameters.
func (in *Scsi29DiskInitParameters) DeepCopy() *Scsi29DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29DiskObservation) DeepCopyInto(out *Scsi29DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29DiskObservation.
func (in *Scsi29DiskObservation) DeepCopy() *Scsi29DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29DiskParameters) DeepCopyInto(out *Scsi29DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29DiskParameters.
func (in *Scsi29DiskParameters) DeepCopy() *Scsi29DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29InitParameters) DeepCopyInto(out *Scsi29InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi29CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi29CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi29DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi29PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29InitParameters.
func (in *Scsi29InitParameters) DeepCopy() *Scsi29InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29Observation) DeepCopyInto(out *Scsi29Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi29CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi29CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi29DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi29PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29Observation.
func (in *Scsi29Observation) DeepCopy() *Scsi29Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi29Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29Parameters) DeepCopyInto(out *Scsi29Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi29CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi29CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi29DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi29PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29Parameters.
func (in *Scsi29Parameters) DeepCopy() *Scsi29Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29PassthroughInitParameters) DeepCopyInto(out *Scsi29PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29PassthroughInitParameters.
func (in *Scsi29PassthroughInitParameters) DeepCopy() *Scsi29PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29PassthroughObservation) DeepCopyInto(out *Scsi29PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29PassthroughObservation.
func (in *Scsi29PassthroughObservation) DeepCopy() *Scsi29PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi29PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi29PassthroughParameters) DeepCopyInto(out *Scsi29PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi29PassthroughParameters.
func (in *Scsi29PassthroughParameters) DeepCopy() *Scsi29PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi29PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CdromInitParameters) DeepCopyInto(out *Scsi2CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CdromInitParameters.
func (in *Scsi2CdromInitParameters) DeepCopy() *Scsi2CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CdromObservation) DeepCopyInto(out *Scsi2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CdromObservation.
func (in *Scsi2CdromObservation) DeepCopy() *Scsi2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CdromParameters) DeepCopyInto(out *Scsi2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CdromParameters.
func (in *Scsi2CdromParameters) DeepCopy() *Scsi2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CloudinitInitParameters) DeepCopyInto(out *Scsi2CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CloudinitInitParameters.
func (in *Scsi2CloudinitInitParameters) DeepCopy() *Scsi2CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CloudinitObservation) DeepCopyInto(out *Scsi2CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CloudinitObservation.
func (in *Scsi2CloudinitObservation) DeepCopy() *Scsi2CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2CloudinitParameters) DeepCopyInto(out *Scsi2CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2CloudinitParameters.
func (in *Scsi2CloudinitParameters) DeepCopy() *Scsi2CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2DiskInitParameters) DeepCopyInto(out *Scsi2DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2DiskInitParameters.
func (in *Scsi2DiskInitParameters) DeepCopy() *Scsi2DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2DiskObservation) DeepCopyInto(out *Scsi2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2DiskObservation.
func (in *Scsi2DiskObservation) DeepCopy() *Scsi2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2DiskParameters) DeepCopyInto(out *Scsi2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2DiskParameters.
func (in *Scsi2DiskParameters) DeepCopy() *Scsi2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2InitParameters) DeepCopyInto(out *Scsi2InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi2CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi2CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi2DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi2PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2InitParameters.
func (in *Scsi2InitParameters) DeepCopy() *Scsi2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2Observation) DeepCopyInto(out *Scsi2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi2CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2Observation.
func (in *Scsi2Observation) DeepCopy() *Scsi2Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2Parameters) DeepCopyInto(out *Scsi2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi2CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2Parameters.
func (in *Scsi2Parameters) DeepCopy() *Scsi2Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2PassthroughInitParameters) DeepCopyInto(out *Scsi2PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2PassthroughInitParameters.
func (in *Scsi2PassthroughInitParameters) DeepCopy() *Scsi2PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2PassthroughObservation) DeepCopyInto(out *Scsi2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2PassthroughObservation.
func (in *Scsi2PassthroughObservation) DeepCopy() *Scsi2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi2PassthroughParameters) DeepCopyInto(out *Scsi2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi2PassthroughParameters.
func (in *Scsi2PassthroughParameters) DeepCopy() *Scsi2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CdromInitParameters) DeepCopyInto(out *Scsi30CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CdromInitParameters.
func (in *Scsi30CdromInitParameters) DeepCopy() *Scsi30CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CdromObservation) DeepCopyInto(out *Scsi30CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CdromObservation.
func (in *Scsi30CdromObservation) DeepCopy() *Scsi30CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CdromParameters) DeepCopyInto(out *Scsi30CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CdromParameters.
func (in *Scsi30CdromParameters) DeepCopy() *Scsi30CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CloudinitInitParameters) DeepCopyInto(out *Scsi30CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CloudinitInitParameters.
func (in *Scsi30CloudinitInitParameters) DeepCopy() *Scsi30CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CloudinitObservation) DeepCopyInto(out *Scsi30CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CloudinitObservation.
func (in *Scsi30CloudinitObservation) DeepCopy() *Scsi30CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30CloudinitParameters) DeepCopyInto(out *Scsi30CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30CloudinitParameters.
func (in *Scsi30CloudinitParameters) DeepCopy() *Scsi30CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30DiskInitParameters) DeepCopyInto(out *Scsi30DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30DiskInitParameters.
func (in *Scsi30DiskInitParameters) DeepCopy() *Scsi30DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30DiskObservation) DeepCopyInto(out *Scsi30DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30DiskObservation.
func (in *Scsi30DiskObservation) DeepCopy() *Scsi30DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30DiskParameters) DeepCopyInto(out *Scsi30DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30DiskParameters.
func (in *Scsi30DiskParameters) DeepCopy() *Scsi30DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30InitParameters) DeepCopyInto(out *Scsi30InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi30CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi30CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi30DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi30PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30InitParameters.
func (in *Scsi30InitParameters) DeepCopy() *Scsi30InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30Observation) DeepCopyInto(out *Scsi30Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi30CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi30CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi30DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi30PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30Observation.
func (in *Scsi30Observation) DeepCopy() *Scsi30Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi30Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30Parameters) DeepCopyInto(out *Scsi30Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi30CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi30CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi30DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi30PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30Parameters.
func (in *Scsi30Parameters) DeepCopy() *Scsi30Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30PassthroughInitParameters) DeepCopyInto(out *Scsi30PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30PassthroughInitParameters.
func (in *Scsi30PassthroughInitParameters) DeepCopy() *Scsi30PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30PassthroughObservation) DeepCopyInto(out *Scsi30PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30PassthroughObservation.
func (in *Scsi30PassthroughObservation) DeepCopy() *Scsi30PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi30PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi30PassthroughParameters) DeepCopyInto(out *Scsi30PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi30PassthroughParameters.
func (in *Scsi30PassthroughParameters) DeepCopy() *Scsi30PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi30PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CdromInitParameters) DeepCopyInto(out *Scsi3CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CdromInitParameters.
func (in *Scsi3CdromInitParameters) DeepCopy() *Scsi3CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CdromObservation) DeepCopyInto(out *Scsi3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CdromObservation.
func (in *Scsi3CdromObservation) DeepCopy() *Scsi3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CdromParameters) DeepCopyInto(out *Scsi3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CdromParameters.
func (in *Scsi3CdromParameters) DeepCopy() *Scsi3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CloudinitInitParameters) DeepCopyInto(out *Scsi3CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CloudinitInitParameters.
func (in *Scsi3CloudinitInitParameters) DeepCopy() *Scsi3CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CloudinitObservation) DeepCopyInto(out *Scsi3CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CloudinitObservation.
func (in *Scsi3CloudinitObservation) DeepCopy() *Scsi3CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3CloudinitParameters) DeepCopyInto(out *Scsi3CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3CloudinitParameters.
func (in *Scsi3CloudinitParameters) DeepCopy() *Scsi3CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3DiskInitParameters) DeepCopyInto(out *Scsi3DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3DiskInitParameters.
func (in *Scsi3DiskInitParameters) DeepCopy() *Scsi3DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3DiskObservation) DeepCopyInto(out *Scsi3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3DiskObservation.
func (in *Scsi3DiskObservation) DeepCopy() *Scsi3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3DiskParameters) DeepCopyInto(out *Scsi3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3DiskParameters.
func (in *Scsi3DiskParameters) DeepCopy() *Scsi3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3InitParameters) DeepCopyInto(out *Scsi3InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi3CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi3CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi3DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi3PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3InitParameters.
func (in *Scsi3InitParameters) DeepCopy() *Scsi3InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3Observation) DeepCopyInto(out *Scsi3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi3CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3Observation.
func (in *Scsi3Observation) DeepCopy() *Scsi3Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3Parameters) DeepCopyInto(out *Scsi3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi3CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3Parameters.
func (in *Scsi3Parameters) DeepCopy() *Scsi3Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3PassthroughInitParameters) DeepCopyInto(out *Scsi3PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3PassthroughInitParameters.
func (in *Scsi3PassthroughInitParameters) DeepCopy() *Scsi3PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3PassthroughObservation) DeepCopyInto(out *Scsi3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3PassthroughObservation.
func (in *Scsi3PassthroughObservation) DeepCopy() *Scsi3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi3PassthroughParameters) DeepCopyInto(out *Scsi3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi3PassthroughParameters.
func (in *Scsi3PassthroughParameters) DeepCopy() *Scsi3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CdromInitParameters) DeepCopyInto(out *Scsi4CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CdromInitParameters.
func (in *Scsi4CdromInitParameters) DeepCopy() *Scsi4CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CdromObservation) DeepCopyInto(out *Scsi4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CdromObservation.
func (in *Scsi4CdromObservation) DeepCopy() *Scsi4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CdromParameters) DeepCopyInto(out *Scsi4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CdromParameters.
func (in *Scsi4CdromParameters) DeepCopy() *Scsi4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CloudinitInitParameters) DeepCopyInto(out *Scsi4CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CloudinitInitParameters.
func (in *Scsi4CloudinitInitParameters) DeepCopy() *Scsi4CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CloudinitObservation) DeepCopyInto(out *Scsi4CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CloudinitObservation.
func (in *Scsi4CloudinitObservation) DeepCopy() *Scsi4CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4CloudinitParameters) DeepCopyInto(out *Scsi4CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4CloudinitParameters.
func (in *Scsi4CloudinitParameters) DeepCopy() *Scsi4CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4DiskInitParameters) DeepCopyInto(out *Scsi4DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4DiskInitParameters.
func (in *Scsi4DiskInitParameters) DeepCopy() *Scsi4DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4DiskObservation) DeepCopyInto(out *Scsi4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4DiskObservation.
func (in *Scsi4DiskObservation) DeepCopy() *Scsi4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4DiskParameters) DeepCopyInto(out *Scsi4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4DiskParameters.
func (in *Scsi4DiskParameters) DeepCopy() *Scsi4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4InitParameters) DeepCopyInto(out *Scsi4InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi4CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi4CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi4DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi4PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4InitParameters.
func (in *Scsi4InitParameters) DeepCopy() *Scsi4InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4Observation) DeepCopyInto(out *Scsi4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi4CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4Observation.
func (in *Scsi4Observation) DeepCopy() *Scsi4Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4Parameters) DeepCopyInto(out *Scsi4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi4CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4Parameters.
func (in *Scsi4Parameters) DeepCopy() *Scsi4Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4PassthroughInitParameters) DeepCopyInto(out *Scsi4PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4PassthroughInitParameters.
func (in *Scsi4PassthroughInitParameters) DeepCopy() *Scsi4PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4PassthroughObservation) DeepCopyInto(out *Scsi4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4PassthroughObservation.
func (in *Scsi4PassthroughObservation) DeepCopy() *Scsi4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi4PassthroughParameters) DeepCopyInto(out *Scsi4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi4PassthroughParameters.
func (in *Scsi4PassthroughParameters) DeepCopy() *Scsi4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CdromInitParameters) DeepCopyInto(out *Scsi5CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CdromInitParameters.
func (in *Scsi5CdromInitParameters) DeepCopy() *Scsi5CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CdromObservation) DeepCopyInto(out *Scsi5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CdromObservation.
func (in *Scsi5CdromObservation) DeepCopy() *Scsi5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CdromParameters) DeepCopyInto(out *Scsi5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CdromParameters.
func (in *Scsi5CdromParameters) DeepCopy() *Scsi5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CloudinitInitParameters) DeepCopyInto(out *Scsi5CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CloudinitInitParameters.
func (in *Scsi5CloudinitInitParameters) DeepCopy() *Scsi5CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CloudinitObservation) DeepCopyInto(out *Scsi5CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CloudinitObservation.
func (in *Scsi5CloudinitObservation) DeepCopy() *Scsi5CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5CloudinitParameters) DeepCopyInto(out *Scsi5CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5CloudinitParameters.
func (in *Scsi5CloudinitParameters) DeepCopy() *Scsi5CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5DiskInitParameters) DeepCopyInto(out *Scsi5DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5DiskInitParameters.
func (in *Scsi5DiskInitParameters) DeepCopy() *Scsi5DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5DiskObservation) DeepCopyInto(out *Scsi5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5DiskObservation.
func (in *Scsi5DiskObservation) DeepCopy() *Scsi5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5DiskParameters) DeepCopyInto(out *Scsi5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5DiskParameters.
func (in *Scsi5DiskParameters) DeepCopy() *Scsi5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5InitParameters) DeepCopyInto(out *Scsi5InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi5CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi5CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi5DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi5PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5InitParameters.
func (in *Scsi5InitParameters) DeepCopy() *Scsi5InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5Observation) DeepCopyInto(out *Scsi5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi5CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5Observation.
func (in *Scsi5Observation) DeepCopy() *Scsi5Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5Parameters) DeepCopyInto(out *Scsi5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi5CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5Parameters.
func (in *Scsi5Parameters) DeepCopy() *Scsi5Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5PassthroughInitParameters) DeepCopyInto(out *Scsi5PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5PassthroughInitParameters.
func (in *Scsi5PassthroughInitParameters) DeepCopy() *Scsi5PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5PassthroughObservation) DeepCopyInto(out *Scsi5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5PassthroughObservation.
func (in *Scsi5PassthroughObservation) DeepCopy() *Scsi5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi5PassthroughParameters) DeepCopyInto(out *Scsi5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi5PassthroughParameters.
func (in *Scsi5PassthroughParameters) DeepCopy() *Scsi5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CdromInitParameters) DeepCopyInto(out *Scsi6CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CdromInitParameters.
func (in *Scsi6CdromInitParameters) DeepCopy() *Scsi6CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CdromObservation) DeepCopyInto(out *Scsi6CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CdromObservation.
func (in *Scsi6CdromObservation) DeepCopy() *Scsi6CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CdromParameters) DeepCopyInto(out *Scsi6CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CdromParameters.
func (in *Scsi6CdromParameters) DeepCopy() *Scsi6CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CloudinitInitParameters) DeepCopyInto(out *Scsi6CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CloudinitInitParameters.
func (in *Scsi6CloudinitInitParameters) DeepCopy() *Scsi6CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CloudinitObservation) DeepCopyInto(out *Scsi6CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CloudinitObservation.
func (in *Scsi6CloudinitObservation) DeepCopy() *Scsi6CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6CloudinitParameters) DeepCopyInto(out *Scsi6CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6CloudinitParameters.
func (in *Scsi6CloudinitParameters) DeepCopy() *Scsi6CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6DiskInitParameters) DeepCopyInto(out *Scsi6DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6DiskInitParameters.
func (in *Scsi6DiskInitParameters) DeepCopy() *Scsi6DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6DiskObservation) DeepCopyInto(out *Scsi6DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6DiskObservation.
func (in *Scsi6DiskObservation) DeepCopy() *Scsi6DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6DiskParameters) DeepCopyInto(out *Scsi6DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6DiskParameters.
func (in *Scsi6DiskParameters) DeepCopy() *Scsi6DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6InitParameters) DeepCopyInto(out *Scsi6InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi6CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi6CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi6DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi6PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6InitParameters.
func (in *Scsi6InitParameters) DeepCopy() *Scsi6InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6Observation) DeepCopyInto(out *Scsi6Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi6CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi6CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi6DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi6PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6Observation.
func (in *Scsi6Observation) DeepCopy() *Scsi6Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6Parameters) DeepCopyInto(out *Scsi6Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi6CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi6CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi6DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi6PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6Parameters.
func (in *Scsi6Parameters) DeepCopy() *Scsi6Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6PassthroughInitParameters) DeepCopyInto(out *Scsi6PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6PassthroughInitParameters.
func (in *Scsi6PassthroughInitParameters) DeepCopy() *Scsi6PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6PassthroughObservation) DeepCopyInto(out *Scsi6PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6PassthroughObservation.
func (in *Scsi6PassthroughObservation) DeepCopy() *Scsi6PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi6PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi6PassthroughParameters) DeepCopyInto(out *Scsi6PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi6PassthroughParameters.
func (in *Scsi6PassthroughParameters) DeepCopy() *Scsi6PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi6PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CdromInitParameters) DeepCopyInto(out *Scsi7CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CdromInitParameters.
func (in *Scsi7CdromInitParameters) DeepCopy() *Scsi7CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CdromObservation) DeepCopyInto(out *Scsi7CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CdromObservation.
func (in *Scsi7CdromObservation) DeepCopy() *Scsi7CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CdromParameters) DeepCopyInto(out *Scsi7CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CdromParameters.
func (in *Scsi7CdromParameters) DeepCopy() *Scsi7CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CloudinitInitParameters) DeepCopyInto(out *Scsi7CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CloudinitInitParameters.
func (in *Scsi7CloudinitInitParameters) DeepCopy() *Scsi7CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CloudinitObservation) DeepCopyInto(out *Scsi7CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CloudinitObservation.
func (in *Scsi7CloudinitObservation) DeepCopy() *Scsi7CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7CloudinitParameters) DeepCopyInto(out *Scsi7CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7CloudinitParameters.
func (in *Scsi7CloudinitParameters) DeepCopy() *Scsi7CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7DiskInitParameters) DeepCopyInto(out *Scsi7DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7DiskInitParameters.
func (in *Scsi7DiskInitParameters) DeepCopy() *Scsi7DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7DiskObservation) DeepCopyInto(out *Scsi7DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7DiskObservation.
func (in *Scsi7DiskObservation) DeepCopy() *Scsi7DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7DiskParameters) DeepCopyInto(out *Scsi7DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7DiskParameters.
func (in *Scsi7DiskParameters) DeepCopy() *Scsi7DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7InitParameters) DeepCopyInto(out *Scsi7InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi7CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi7CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi7DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi7PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7InitParameters.
func (in *Scsi7InitParameters) DeepCopy() *Scsi7InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7Observation) DeepCopyInto(out *Scsi7Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi7CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi7CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi7DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi7PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7Observation.
func (in *Scsi7Observation) DeepCopy() *Scsi7Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi7Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7Parameters) DeepCopyInto(out *Scsi7Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi7CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi7CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi7DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi7PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7Parameters.
func (in *Scsi7Parameters) DeepCopy() *Scsi7Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7PassthroughInitParameters) DeepCopyInto(out *Scsi7PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7PassthroughInitParameters.
func (in *Scsi7PassthroughInitParameters) DeepCopy() *Scsi7PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7PassthroughObservation) DeepCopyInto(out *Scsi7PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7PassthroughObservation.
func (in *Scsi7PassthroughObservation) DeepCopy() *Scsi7PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi7PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi7PassthroughParameters) DeepCopyInto(out *Scsi7PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi7PassthroughParameters.
func (in *Scsi7PassthroughParameters) DeepCopy() *Scsi7PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi7PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CdromInitParameters) DeepCopyInto(out *Scsi8CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CdromInitParameters.
func (in *Scsi8CdromInitParameters) DeepCopy() *Scsi8CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CdromObservation) DeepCopyInto(out *Scsi8CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CdromObservation.
func (in *Scsi8CdromObservation) DeepCopy() *Scsi8CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CdromParameters) DeepCopyInto(out *Scsi8CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CdromParameters.
func (in *Scsi8CdromParameters) DeepCopy() *Scsi8CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CloudinitInitParameters) DeepCopyInto(out *Scsi8CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CloudinitInitParameters.
func (in *Scsi8CloudinitInitParameters) DeepCopy() *Scsi8CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CloudinitObservation) DeepCopyInto(out *Scsi8CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CloudinitObservation.
func (in *Scsi8CloudinitObservation) DeepCopy() *Scsi8CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8CloudinitParameters) DeepCopyInto(out *Scsi8CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8CloudinitParameters.
func (in *Scsi8CloudinitParameters) DeepCopy() *Scsi8CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8DiskInitParameters) DeepCopyInto(out *Scsi8DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8DiskInitParameters.
func (in *Scsi8DiskInitParameters) DeepCopy() *Scsi8DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8DiskObservation) DeepCopyInto(out *Scsi8DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8DiskObservation.
func (in *Scsi8DiskObservation) DeepCopy() *Scsi8DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8DiskParameters) DeepCopyInto(out *Scsi8DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8DiskParameters.
func (in *Scsi8DiskParameters) DeepCopy() *Scsi8DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8InitParameters) DeepCopyInto(out *Scsi8InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi8CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi8CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi8DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi8PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8InitParameters.
func (in *Scsi8InitParameters) DeepCopy() *Scsi8InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8Observation) DeepCopyInto(out *Scsi8Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi8CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi8CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi8DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi8PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8Observation.
func (in *Scsi8Observation) DeepCopy() *Scsi8Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi8Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8Parameters) DeepCopyInto(out *Scsi8Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi8CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi8CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi8DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi8PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8Parameters.
func (in *Scsi8Parameters) DeepCopy() *Scsi8Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8PassthroughInitParameters) DeepCopyInto(out *Scsi8PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8PassthroughInitParameters.
func (in *Scsi8PassthroughInitParameters) DeepCopy() *Scsi8PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8PassthroughObservation) DeepCopyInto(out *Scsi8PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8PassthroughObservation.
func (in *Scsi8PassthroughObservation) DeepCopy() *Scsi8PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi8PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi8PassthroughParameters) DeepCopyInto(out *Scsi8PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi8PassthroughParameters.
func (in *Scsi8PassthroughParameters) DeepCopy() *Scsi8PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi8PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CdromInitParameters) DeepCopyInto(out *Scsi9CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CdromInitParameters.
func (in *Scsi9CdromInitParameters) DeepCopy() *Scsi9CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CdromObservation) DeepCopyInto(out *Scsi9CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CdromObservation.
func (in *Scsi9CdromObservation) DeepCopy() *Scsi9CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CdromParameters) DeepCopyInto(out *Scsi9CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CdromParameters.
func (in *Scsi9CdromParameters) DeepCopy() *Scsi9CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CloudinitInitParameters) DeepCopyInto(out *Scsi9CloudinitInitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CloudinitInitParameters.
func (in *Scsi9CloudinitInitParameters) DeepCopy() *Scsi9CloudinitInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CloudinitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CloudinitObservation) DeepCopyInto(out *Scsi9CloudinitObservation) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CloudinitObservation.
func (in *Scsi9CloudinitObservation) DeepCopy() *Scsi9CloudinitObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9CloudinitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9CloudinitParameters) DeepCopyInto(out *Scsi9CloudinitParameters) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9CloudinitParameters.
func (in *Scsi9CloudinitParameters) DeepCopy() *Scsi9CloudinitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9CloudinitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9DiskInitParameters) DeepCopyInto(out *Scsi9DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9DiskInitParameters.
func (in *Scsi9DiskInitParameters) DeepCopy() *Scsi9DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9DiskObservation) DeepCopyInto(out *Scsi9DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9DiskObservation.
func (in *Scsi9DiskObservation) DeepCopy() *Scsi9DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9DiskParameters) DeepCopyInto(out *Scsi9DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9DiskParameters.
func (in *Scsi9DiskParameters) DeepCopy() *Scsi9DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9InitParameters) DeepCopyInto(out *Scsi9InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi9CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi9CloudinitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi9DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi9PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9InitParameters.
func (in *Scsi9InitParameters) DeepCopy() *Scsi9InitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9Observation) DeepCopyInto(out *Scsi9Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi9CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi9CloudinitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi9DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi9PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9Observation.
func (in *Scsi9Observation) DeepCopy() *Scsi9Observation {
	if in == nil {
		return nil
	}
	out := new(Scsi9Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9Parameters) DeepCopyInto(out *Scsi9Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Scsi9CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloudinit != nil {
		in, out := &in.Cloudinit, &out.Cloudinit
		*out = make([]Scsi9CloudinitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Scsi9DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Scsi9PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9Parameters.
func (in *Scsi9Parameters) DeepCopy() *Scsi9Parameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9PassthroughInitParameters) DeepCopyInto(out *Scsi9PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9PassthroughInitParameters.
func (in *Scsi9PassthroughInitParameters) DeepCopy() *Scsi9PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9PassthroughObservation) DeepCopyInto(out *Scsi9PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9PassthroughObservation.
func (in *Scsi9PassthroughObservation) DeepCopy() *Scsi9PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Scsi9PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scsi9PassthroughParameters) DeepCopyInto(out *Scsi9PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Emulatessd != nil {
		in, out := &in.Emulatessd, &out.Emulatessd
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scsi9PassthroughParameters.
func (in *Scsi9PassthroughParameters) DeepCopy() *Scsi9PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Scsi9PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScsiInitParameters) DeepCopyInto(out *ScsiInitParameters) {
	*out = *in
	if in.Scsi0 != nil {
		in, out := &in.Scsi0, &out.Scsi0
		*out = make([]Scsi0InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi1 != nil {
		in, out := &in.Scsi1, &out.Scsi1
		*out = make([]Scsi1InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi10 != nil {
		in, out := &in.Scsi10, &out.Scsi10
		*out = make([]Scsi10InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi11 != nil {
		in, out := &in.Scsi11, &out.Scsi11
		*out = make([]Scsi11InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi12 != nil {
		in, out := &in.Scsi12, &out.Scsi12
		*out = make([]Scsi12InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi13 != nil {
		in, out := &in.Scsi13, &out.Scsi13
		*out = make([]Scsi13InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi14 != nil {
		in, out := &in.Scsi14, &out.Scsi14
		*out = make([]Scsi14InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi15 != nil {
		in, out := &in.Scsi15, &out.Scsi15
		*out = make([]Scsi15InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi16 != nil {
		in, out := &in.Scsi16, &out.Scsi16
		*out = make([]Scsi16InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi17 != nil {
		in, out := &in.Scsi17, &out.Scsi17
		*out = make([]Scsi17InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi18 != nil {
		in, out := &in.Scsi18, &out.Scsi18
		*out = make([]Scsi18InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi19 != nil {
		in, out := &in.Scsi19, &out.Scsi19
		*out = make([]Scsi19InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi2 != nil {
		in, out := &in.Scsi2, &out.Scsi2
		*out = make([]Scsi2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi20 != nil {
		in, out := &in.Scsi20, &out.Scsi20
		*out = make([]Scsi20InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi21 != nil {
		in, out := &in.Scsi21, &out.Scsi21
		*out = make([]Scsi21InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi22 != nil {
		in, out := &in.Scsi22, &out.Scsi22
		*out = make([]Scsi22InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi23 != nil {
		in, out := &in.Scsi23, &out.Scsi23
		*out = make([]Scsi23InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi24 != nil {
		in, out := &in.Scsi24, &out.Scsi24
		*out = make([]Scsi24InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi25 != nil {
		in, out := &in.Scsi25, &out.Scsi25
		*out = make([]Scsi25InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi26 != nil {
		in, out := &in.Scsi26, &out.Scsi26
		*out = make([]Scsi26InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi27 != nil {
		in, out := &in.Scsi27, &out.Scsi27
		*out = make([]Scsi27InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi28 != nil {
		in, out := &in.Scsi28, &out.Scsi28
		*out = make([]Scsi28InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi29 != nil {
		in, out := &in.Scsi29, &out.Scsi29
		*out = make([]Scsi29InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi3 != nil {
		in, out := &in.Scsi3, &out.Scsi3
		*out = make([]Scsi3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi30 != nil {
		in, out := &in.Scsi30, &out.Scsi30
		*out = make([]Scsi30InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi4 != nil {
		in, out := &in.Scsi4, &out.Scsi4
		*out = make([]Scsi4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi5 != nil {
		in, out := &in.Scsi5, &out.Scsi5
		*out = make([]Scsi5InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi6 != nil {
		in, out := &in.Scsi6, &out.Scsi6
		*out = make([]Scsi6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi7 != nil {
		in, out := &in.Scsi7, &out.Scsi7
		*out = make([]Scsi7InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi8 != nil {
		in, out := &in.Scsi8, &out.Scsi8
		*out = make([]Scsi8InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi9 != nil {
		in, out := &in.Scsi9, &out.Scsi9
		*out = make([]Scsi9InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScsiInitParameters.
func (in *ScsiInitParameters) DeepCopy() *ScsiInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScsiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScsiObservation) DeepCopyInto(out *ScsiObservation) {
	*out = *in
	if in.Scsi0 != nil {
		in, out := &in.Scsi0, &out.Scsi0
		*out = make([]Scsi0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi1 != nil {
		in, out := &in.Scsi1, &out.Scsi1
		*out = make([]Scsi1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi10 != nil {
		in, out := &in.Scsi10, &out.Scsi10
		*out = make([]Scsi10Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi11 != nil {
		in, out := &in.Scsi11, &out.Scsi11
		*out = make([]Scsi11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi12 != nil {
		in, out := &in.Scsi12, &out.Scsi12
		*out = make([]Scsi12Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi13 != nil {
		in, out := &in.Scsi13, &out.Scsi13
		*out = make([]Scsi13Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi14 != nil {
		in, out := &in.Scsi14, &out.Scsi14
		*out = make([]Scsi14Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi15 != nil {
		in, out := &in.Scsi15, &out.Scsi15
		*out = make([]Scsi15Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi16 != nil {
		in, out := &in.Scsi16, &out.Scsi16
		*out = make([]Scsi16Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi17 != nil {
		in, out := &in.Scsi17, &out.Scsi17
		*out = make([]Scsi17Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi18 != nil {
		in, out := &in.Scsi18, &out.Scsi18
		*out = make([]Scsi18Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi19 != nil {
		in, out := &in.Scsi19, &out.Scsi19
		*out = make([]Scsi19Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi2 != nil {
		in, out := &in.Scsi2, &out.Scsi2
		*out = make([]Scsi2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi20 != nil {
		in, out := &in.Scsi20, &out.Scsi20
		*out = make([]Scsi20Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi21 != nil {
		in, out := &in.Scsi21, &out.Scsi21
		*out = make([]Scsi21Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi22 != nil {
		in, out := &in.Scsi22, &out.Scsi22
		*out = make([]Scsi22Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi23 != nil {
		in, out := &in.Scsi23, &out.Scsi23
		*out = make([]Scsi23Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi24 != nil {
		in, out := &in.Scsi24, &out.Scsi24
		*out = make([]Scsi24Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi25 != nil {
		in, out := &in.Scsi25, &out.Scsi25
		*out = make([]Scsi25Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi26 != nil {
		in, out := &in.Scsi26, &out.Scsi26
		*out = make([]Scsi26Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi27 != nil {
		in, out := &in.Scsi27, &out.Scsi27
		*out = make([]Scsi27Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi28 != nil {
		in, out := &in.Scsi28, &out.Scsi28
		*out = make([]Scsi28Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi29 != nil {
		in, out := &in.Scsi29, &out.Scsi29
		*out = make([]Scsi29Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi3 != nil {
		in, out := &in.Scsi3, &out.Scsi3
		*out = make([]Scsi3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi30 != nil {
		in, out := &in.Scsi30, &out.Scsi30
		*out = make([]Scsi30Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi4 != nil {
		in, out := &in.Scsi4, &out.Scsi4
		*out = make([]Scsi4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi5 != nil {
		in, out := &in.Scsi5, &out.Scsi5
		*out = make([]Scsi5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi6 != nil {
		in, out := &in.Scsi6, &out.Scsi6
		*out = make([]Scsi6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi7 != nil {
		in, out := &in.Scsi7, &out.Scsi7
		*out = make([]Scsi7Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi8 != nil {
		in, out := &in.Scsi8, &out.Scsi8
		*out = make([]Scsi8Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi9 != nil {
		in, out := &in.Scsi9, &out.Scsi9
		*out = make([]Scsi9Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScsiObservation.
func (in *ScsiObservation) DeepCopy() *ScsiObservation {
	if in == nil {
		return nil
	}
	out := new(ScsiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScsiParameters) DeepCopyInto(out *ScsiParameters) {
	*out = *in
	if in.Scsi0 != nil {
		in, out := &in.Scsi0, &out.Scsi0
		*out = make([]Scsi0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi1 != nil {
		in, out := &in.Scsi1, &out.Scsi1
		*out = make([]Scsi1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi10 != nil {
		in, out := &in.Scsi10, &out.Scsi10
		*out = make([]Scsi10Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi11 != nil {
		in, out := &in.Scsi11, &out.Scsi11
		*out = make([]Scsi11Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi12 != nil {
		in, out := &in.Scsi12, &out.Scsi12
		*out = make([]Scsi12Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi13 != nil {
		in, out := &in.Scsi13, &out.Scsi13
		*out = make([]Scsi13Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi14 != nil {
		in, out := &in.Scsi14, &out.Scsi14
		*out = make([]Scsi14Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi15 != nil {
		in, out := &in.Scsi15, &out.Scsi15
		*out = make([]Scsi15Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi16 != nil {
		in, out := &in.Scsi16, &out.Scsi16
		*out = make([]Scsi16Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi17 != nil {
		in, out := &in.Scsi17, &out.Scsi17
		*out = make([]Scsi17Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi18 != nil {
		in, out := &in.Scsi18, &out.Scsi18
		*out = make([]Scsi18Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi19 != nil {
		in, out := &in.Scsi19, &out.Scsi19
		*out = make([]Scsi19Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi2 != nil {
		in, out := &in.Scsi2, &out.Scsi2
		*out = make([]Scsi2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi20 != nil {
		in, out := &in.Scsi20, &out.Scsi20
		*out = make([]Scsi20Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi21 != nil {
		in, out := &in.Scsi21, &out.Scsi21
		*out = make([]Scsi21Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi22 != nil {
		in, out := &in.Scsi22, &out.Scsi22
		*out = make([]Scsi22Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi23 != nil {
		in, out := &in.Scsi23, &out.Scsi23
		*out = make([]Scsi23Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi24 != nil {
		in, out := &in.Scsi24, &out.Scsi24
		*out = make([]Scsi24Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi25 != nil {
		in, out := &in.Scsi25, &out.Scsi25
		*out = make([]Scsi25Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi26 != nil {
		in, out := &in.Scsi26, &out.Scsi26
		*out = make([]Scsi26Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi27 != nil {
		in, out := &in.Scsi27, &out.Scsi27
		*out = make([]Scsi27Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi28 != nil {
		in, out := &in.Scsi28, &out.Scsi28
		*out = make([]Scsi28Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi29 != nil {
		in, out := &in.Scsi29, &out.Scsi29
		*out = make([]Scsi29Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi3 != nil {
		in, out := &in.Scsi3, &out.Scsi3
		*out = make([]Scsi3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi30 != nil {
		in, out := &in.Scsi30, &out.Scsi30
		*out = make([]Scsi30Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi4 != nil {
		in, out := &in.Scsi4, &out.Scsi4
		*out = make([]Scsi4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi5 != nil {
		in, out := &in.Scsi5, &out.Scsi5
		*out = make([]Scsi5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi6 != nil {
		in, out := &in.Scsi6, &out.Scsi6
		*out = make([]Scsi6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi7 != nil {
		in, out := &in.Scsi7, &out.Scsi7
		*out = make([]Scsi7Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi8 != nil {
		in, out := &in.Scsi8, &out.Scsi8
		*out = make([]Scsi8Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scsi9 != nil {
		in, out := &in.Scsi9, &out.Scsi9
		*out = make([]Scsi9Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScsiParameters.
func (in *ScsiParameters) DeepCopy() *ScsiParameters {
	if in == nil {
		return nil
	}
	out := new(ScsiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialInitParameters) DeepCopyInto(out *SerialInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialInitParameters.
func (in *SerialInitParameters) DeepCopy() *SerialInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerialInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialObservation) DeepCopyInto(out *SerialObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialObservation.
func (in *SerialObservation) DeepCopy() *SerialObservation {
	if in == nil {
		return nil
	}
	out := new(SerialObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialParameters) DeepCopyInto(out *SerialParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialParameters.
func (in *SerialParameters) DeepCopy() *SerialParameters {
	if in == nil {
		return nil
	}
	out := new(SerialParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosInitParameters) DeepCopyInto(out *SmbiosInitParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosInitParameters.
func (in *SmbiosInitParameters) DeepCopy() *SmbiosInitParameters {
	if in == nil {
		return nil
	}
	out := new(SmbiosInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosObservation) DeepCopyInto(out *SmbiosObservation) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosObservation.
func (in *SmbiosObservation) DeepCopy() *SmbiosObservation {
	if in == nil {
		return nil
	}
	out := new(SmbiosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosParameters) DeepCopyInto(out *SmbiosParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosParameters.
func (in *SmbiosParameters) DeepCopy() *SmbiosParameters {
	if in == nil {
		return nil
	}
	out := new(SmbiosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnusedDiskInitParameters) DeepCopyInto(out *UnusedDiskInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnusedDiskInitParameters.
func (in *UnusedDiskInitParameters) DeepCopy() *UnusedDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnusedDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnusedDiskObservation) DeepCopyInto(out *UnusedDiskObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Slot != nil {
		in, out := &in.Slot, &out.Slot
		*out = new(float64)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnusedDiskObservation.
func (in *UnusedDiskObservation) DeepCopy() *UnusedDiskObservation {
	if in == nil {
		return nil
	}
	out := new(UnusedDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnusedDiskParameters) DeepCopyInto(out *UnusedDiskParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnusedDiskParameters.
func (in *UnusedDiskParameters) DeepCopy() *UnusedDiskParameters {
	if in == nil {
		return nil
	}
	out := new(UnusedDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbInitParameters) DeepCopyInto(out *UsbInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbInitParameters.
func (in *UsbInitParameters) DeepCopy() *UsbInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbObservation) DeepCopyInto(out *UsbObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbObservation.
func (in *UsbObservation) DeepCopy() *UsbObservation {
	if in == nil {
		return nil
	}
	out := new(UsbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbParameters) DeepCopyInto(out *UsbParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbParameters.
func (in *UsbParameters) DeepCopy() *UsbParameters {
	if in == nil {
		return nil
	}
	out := new(UsbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaInitParameters) DeepCopyInto(out *VgaInitParameters) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaInitParameters.
func (in *VgaInitParameters) DeepCopy() *VgaInitParameters {
	if in == nil {
		return nil
	}
	out := new(VgaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaObservation) DeepCopyInto(out *VgaObservation) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaObservation.
func (in *VgaObservation) DeepCopy() *VgaObservation {
	if in == nil {
		return nil
	}
	out := new(VgaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaParameters) DeepCopyInto(out *VgaParameters) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaParameters.
func (in *VgaParameters) DeepCopy() *VgaParameters {
	if in == nil {
		return nil
	}
	out := new(VgaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0CdromInitParameters) DeepCopyInto(out *Virtio0CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0CdromInitParameters.
func (in *Virtio0CdromInitParameters) DeepCopy() *Virtio0CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0CdromObservation) DeepCopyInto(out *Virtio0CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0CdromObservation.
func (in *Virtio0CdromObservation) DeepCopy() *Virtio0CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0CdromParameters) DeepCopyInto(out *Virtio0CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0CdromParameters.
func (in *Virtio0CdromParameters) DeepCopy() *Virtio0CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0DiskInitParameters) DeepCopyInto(out *Virtio0DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0DiskInitParameters.
func (in *Virtio0DiskInitParameters) DeepCopy() *Virtio0DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0DiskObservation) DeepCopyInto(out *Virtio0DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0DiskObservation.
func (in *Virtio0DiskObservation) DeepCopy() *Virtio0DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0DiskParameters) DeepCopyInto(out *Virtio0DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0DiskParameters.
func (in *Virtio0DiskParameters) DeepCopy() *Virtio0DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0InitParameters) DeepCopyInto(out *Virtio0InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio0CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio0DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio0PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0InitParameters.
func (in *Virtio0InitParameters) DeepCopy() *Virtio0InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0Observation) DeepCopyInto(out *Virtio0Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio0CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio0DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio0PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0Observation.
func (in *Virtio0Observation) DeepCopy() *Virtio0Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio0Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0Parameters) DeepCopyInto(out *Virtio0Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio0CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio0DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio0PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0Parameters.
func (in *Virtio0Parameters) DeepCopy() *Virtio0Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0PassthroughInitParameters) DeepCopyInto(out *Virtio0PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0PassthroughInitParameters.
func (in *Virtio0PassthroughInitParameters) DeepCopy() *Virtio0PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0PassthroughObservation) DeepCopyInto(out *Virtio0PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0PassthroughObservation.
func (in *Virtio0PassthroughObservation) DeepCopy() *Virtio0PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio0PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio0PassthroughParameters) DeepCopyInto(out *Virtio0PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio0PassthroughParameters.
func (in *Virtio0PassthroughParameters) DeepCopy() *Virtio0PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio0PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10CdromInitParameters) DeepCopyInto(out *Virtio10CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10CdromInitParameters.
func (in *Virtio10CdromInitParameters) DeepCopy() *Virtio10CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10CdromObservation) DeepCopyInto(out *Virtio10CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10CdromObservation.
func (in *Virtio10CdromObservation) DeepCopy() *Virtio10CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10CdromParameters) DeepCopyInto(out *Virtio10CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10CdromParameters.
func (in *Virtio10CdromParameters) DeepCopy() *Virtio10CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10DiskInitParameters) DeepCopyInto(out *Virtio10DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10DiskInitParameters.
func (in *Virtio10DiskInitParameters) DeepCopy() *Virtio10DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10DiskObservation) DeepCopyInto(out *Virtio10DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10DiskObservation.
func (in *Virtio10DiskObservation) DeepCopy() *Virtio10DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10DiskParameters) DeepCopyInto(out *Virtio10DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10DiskParameters.
func (in *Virtio10DiskParameters) DeepCopy() *Virtio10DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10InitParameters) DeepCopyInto(out *Virtio10InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio10CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio10DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio10PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10InitParameters.
func (in *Virtio10InitParameters) DeepCopy() *Virtio10InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10Observation) DeepCopyInto(out *Virtio10Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio10CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio10DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio10PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10Observation.
func (in *Virtio10Observation) DeepCopy() *Virtio10Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio10Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10Parameters) DeepCopyInto(out *Virtio10Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio10CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio10DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio10PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10Parameters.
func (in *Virtio10Parameters) DeepCopy() *Virtio10Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10PassthroughInitParameters) DeepCopyInto(out *Virtio10PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10PassthroughInitParameters.
func (in *Virtio10PassthroughInitParameters) DeepCopy() *Virtio10PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10PassthroughObservation) DeepCopyInto(out *Virtio10PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10PassthroughObservation.
func (in *Virtio10PassthroughObservation) DeepCopy() *Virtio10PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio10PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio10PassthroughParameters) DeepCopyInto(out *Virtio10PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio10PassthroughParameters.
func (in *Virtio10PassthroughParameters) DeepCopy() *Virtio10PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio10PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11CdromInitParameters) DeepCopyInto(out *Virtio11CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11CdromInitParameters.
func (in *Virtio11CdromInitParameters) DeepCopy() *Virtio11CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11CdromObservation) DeepCopyInto(out *Virtio11CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11CdromObservation.
func (in *Virtio11CdromObservation) DeepCopy() *Virtio11CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11CdromParameters) DeepCopyInto(out *Virtio11CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11CdromParameters.
func (in *Virtio11CdromParameters) DeepCopy() *Virtio11CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11DiskInitParameters) DeepCopyInto(out *Virtio11DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11DiskInitParameters.
func (in *Virtio11DiskInitParameters) DeepCopy() *Virtio11DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11DiskObservation) DeepCopyInto(out *Virtio11DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11DiskObservation.
func (in *Virtio11DiskObservation) DeepCopy() *Virtio11DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11DiskParameters) DeepCopyInto(out *Virtio11DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11DiskParameters.
func (in *Virtio11DiskParameters) DeepCopy() *Virtio11DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11InitParameters) DeepCopyInto(out *Virtio11InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio11CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio11DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio11PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11InitParameters.
func (in *Virtio11InitParameters) DeepCopy() *Virtio11InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11Observation) DeepCopyInto(out *Virtio11Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio11CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio11DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio11PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11Observation.
func (in *Virtio11Observation) DeepCopy() *Virtio11Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11Parameters) DeepCopyInto(out *Virtio11Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio11CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio11DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio11PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11Parameters.
func (in *Virtio11Parameters) DeepCopy() *Virtio11Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11PassthroughInitParameters) DeepCopyInto(out *Virtio11PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11PassthroughInitParameters.
func (in *Virtio11PassthroughInitParameters) DeepCopy() *Virtio11PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11PassthroughObservation) DeepCopyInto(out *Virtio11PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11PassthroughObservation.
func (in *Virtio11PassthroughObservation) DeepCopy() *Virtio11PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio11PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio11PassthroughParameters) DeepCopyInto(out *Virtio11PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio11PassthroughParameters.
func (in *Virtio11PassthroughParameters) DeepCopy() *Virtio11PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio11PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12CdromInitParameters) DeepCopyInto(out *Virtio12CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12CdromInitParameters.
func (in *Virtio12CdromInitParameters) DeepCopy() *Virtio12CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12CdromObservation) DeepCopyInto(out *Virtio12CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12CdromObservation.
func (in *Virtio12CdromObservation) DeepCopy() *Virtio12CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12CdromParameters) DeepCopyInto(out *Virtio12CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12CdromParameters.
func (in *Virtio12CdromParameters) DeepCopy() *Virtio12CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12DiskInitParameters) DeepCopyInto(out *Virtio12DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12DiskInitParameters.
func (in *Virtio12DiskInitParameters) DeepCopy() *Virtio12DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12DiskObservation) DeepCopyInto(out *Virtio12DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12DiskObservation.
func (in *Virtio12DiskObservation) DeepCopy() *Virtio12DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12DiskParameters) DeepCopyInto(out *Virtio12DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12DiskParameters.
func (in *Virtio12DiskParameters) DeepCopy() *Virtio12DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12InitParameters) DeepCopyInto(out *Virtio12InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio12CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio12DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio12PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12InitParameters.
func (in *Virtio12InitParameters) DeepCopy() *Virtio12InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12Observation) DeepCopyInto(out *Virtio12Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio12CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio12DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio12PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12Observation.
func (in *Virtio12Observation) DeepCopy() *Virtio12Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio12Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12Parameters) DeepCopyInto(out *Virtio12Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio12CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio12DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio12PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12Parameters.
func (in *Virtio12Parameters) DeepCopy() *Virtio12Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12PassthroughInitParameters) DeepCopyInto(out *Virtio12PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12PassthroughInitParameters.
func (in *Virtio12PassthroughInitParameters) DeepCopy() *Virtio12PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12PassthroughObservation) DeepCopyInto(out *Virtio12PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12PassthroughObservation.
func (in *Virtio12PassthroughObservation) DeepCopy() *Virtio12PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio12PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio12PassthroughParameters) DeepCopyInto(out *Virtio12PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio12PassthroughParameters.
func (in *Virtio12PassthroughParameters) DeepCopy() *Virtio12PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio12PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13CdromInitParameters) DeepCopyInto(out *Virtio13CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13CdromInitParameters.
func (in *Virtio13CdromInitParameters) DeepCopy() *Virtio13CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13CdromObservation) DeepCopyInto(out *Virtio13CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13CdromObservation.
func (in *Virtio13CdromObservation) DeepCopy() *Virtio13CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13CdromParameters) DeepCopyInto(out *Virtio13CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13CdromParameters.
func (in *Virtio13CdromParameters) DeepCopy() *Virtio13CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13DiskInitParameters) DeepCopyInto(out *Virtio13DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13DiskInitParameters.
func (in *Virtio13DiskInitParameters) DeepCopy() *Virtio13DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13DiskObservation) DeepCopyInto(out *Virtio13DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13DiskObservation.
func (in *Virtio13DiskObservation) DeepCopy() *Virtio13DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13DiskParameters) DeepCopyInto(out *Virtio13DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13DiskParameters.
func (in *Virtio13DiskParameters) DeepCopy() *Virtio13DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13InitParameters) DeepCopyInto(out *Virtio13InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio13CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio13DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio13PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13InitParameters.
func (in *Virtio13InitParameters) DeepCopy() *Virtio13InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13Observation) DeepCopyInto(out *Virtio13Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio13CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio13DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio13PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13Observation.
func (in *Virtio13Observation) DeepCopy() *Virtio13Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio13Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13Parameters) DeepCopyInto(out *Virtio13Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio13CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio13DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio13PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13Parameters.
func (in *Virtio13Parameters) DeepCopy() *Virtio13Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13PassthroughInitParameters) DeepCopyInto(out *Virtio13PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13PassthroughInitParameters.
func (in *Virtio13PassthroughInitParameters) DeepCopy() *Virtio13PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13PassthroughObservation) DeepCopyInto(out *Virtio13PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13PassthroughObservation.
func (in *Virtio13PassthroughObservation) DeepCopy() *Virtio13PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio13PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio13PassthroughParameters) DeepCopyInto(out *Virtio13PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio13PassthroughParameters.
func (in *Virtio13PassthroughParameters) DeepCopy() *Virtio13PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio13PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14CdromInitParameters) DeepCopyInto(out *Virtio14CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14CdromInitParameters.
func (in *Virtio14CdromInitParameters) DeepCopy() *Virtio14CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14CdromObservation) DeepCopyInto(out *Virtio14CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14CdromObservation.
func (in *Virtio14CdromObservation) DeepCopy() *Virtio14CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14CdromParameters) DeepCopyInto(out *Virtio14CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14CdromParameters.
func (in *Virtio14CdromParameters) DeepCopy() *Virtio14CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14DiskInitParameters) DeepCopyInto(out *Virtio14DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14DiskInitParameters.
func (in *Virtio14DiskInitParameters) DeepCopy() *Virtio14DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14DiskObservation) DeepCopyInto(out *Virtio14DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14DiskObservation.
func (in *Virtio14DiskObservation) DeepCopy() *Virtio14DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14DiskParameters) DeepCopyInto(out *Virtio14DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14DiskParameters.
func (in *Virtio14DiskParameters) DeepCopy() *Virtio14DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14InitParameters) DeepCopyInto(out *Virtio14InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio14CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio14DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio14PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14InitParameters.
func (in *Virtio14InitParameters) DeepCopy() *Virtio14InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14Observation) DeepCopyInto(out *Virtio14Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio14CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio14DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio14PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14Observation.
func (in *Virtio14Observation) DeepCopy() *Virtio14Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio14Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14Parameters) DeepCopyInto(out *Virtio14Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio14CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio14DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio14PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14Parameters.
func (in *Virtio14Parameters) DeepCopy() *Virtio14Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14PassthroughInitParameters) DeepCopyInto(out *Virtio14PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14PassthroughInitParameters.
func (in *Virtio14PassthroughInitParameters) DeepCopy() *Virtio14PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14PassthroughObservation) DeepCopyInto(out *Virtio14PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14PassthroughObservation.
func (in *Virtio14PassthroughObservation) DeepCopy() *Virtio14PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio14PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio14PassthroughParameters) DeepCopyInto(out *Virtio14PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio14PassthroughParameters.
func (in *Virtio14PassthroughParameters) DeepCopy() *Virtio14PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio14PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15CdromInitParameters) DeepCopyInto(out *Virtio15CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15CdromInitParameters.
func (in *Virtio15CdromInitParameters) DeepCopy() *Virtio15CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15CdromObservation) DeepCopyInto(out *Virtio15CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15CdromObservation.
func (in *Virtio15CdromObservation) DeepCopy() *Virtio15CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15CdromParameters) DeepCopyInto(out *Virtio15CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15CdromParameters.
func (in *Virtio15CdromParameters) DeepCopy() *Virtio15CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15DiskInitParameters) DeepCopyInto(out *Virtio15DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15DiskInitParameters.
func (in *Virtio15DiskInitParameters) DeepCopy() *Virtio15DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15DiskObservation) DeepCopyInto(out *Virtio15DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15DiskObservation.
func (in *Virtio15DiskObservation) DeepCopy() *Virtio15DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15DiskParameters) DeepCopyInto(out *Virtio15DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15DiskParameters.
func (in *Virtio15DiskParameters) DeepCopy() *Virtio15DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15InitParameters) DeepCopyInto(out *Virtio15InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio15CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio15DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio15PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15InitParameters.
func (in *Virtio15InitParameters) DeepCopy() *Virtio15InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15Observation) DeepCopyInto(out *Virtio15Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio15CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio15DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio15PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15Observation.
func (in *Virtio15Observation) DeepCopy() *Virtio15Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio15Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15Parameters) DeepCopyInto(out *Virtio15Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio15CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio15DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio15PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15Parameters.
func (in *Virtio15Parameters) DeepCopy() *Virtio15Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15PassthroughInitParameters) DeepCopyInto(out *Virtio15PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15PassthroughInitParameters.
func (in *Virtio15PassthroughInitParameters) DeepCopy() *Virtio15PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15PassthroughObservation) DeepCopyInto(out *Virtio15PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15PassthroughObservation.
func (in *Virtio15PassthroughObservation) DeepCopy() *Virtio15PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio15PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio15PassthroughParameters) DeepCopyInto(out *Virtio15PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio15PassthroughParameters.
func (in *Virtio15PassthroughParameters) DeepCopy() *Virtio15PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio15PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1CdromInitParameters) DeepCopyInto(out *Virtio1CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1CdromInitParameters.
func (in *Virtio1CdromInitParameters) DeepCopy() *Virtio1CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1CdromObservation) DeepCopyInto(out *Virtio1CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1CdromObservation.
func (in *Virtio1CdromObservation) DeepCopy() *Virtio1CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1CdromParameters) DeepCopyInto(out *Virtio1CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1CdromParameters.
func (in *Virtio1CdromParameters) DeepCopy() *Virtio1CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1DiskInitParameters) DeepCopyInto(out *Virtio1DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1DiskInitParameters.
func (in *Virtio1DiskInitParameters) DeepCopy() *Virtio1DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1DiskObservation) DeepCopyInto(out *Virtio1DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1DiskObservation.
func (in *Virtio1DiskObservation) DeepCopy() *Virtio1DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1DiskParameters) DeepCopyInto(out *Virtio1DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1DiskParameters.
func (in *Virtio1DiskParameters) DeepCopy() *Virtio1DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1InitParameters) DeepCopyInto(out *Virtio1InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio1CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio1DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio1PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1InitParameters.
func (in *Virtio1InitParameters) DeepCopy() *Virtio1InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1Observation) DeepCopyInto(out *Virtio1Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio1CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio1DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio1PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1Observation.
func (in *Virtio1Observation) DeepCopy() *Virtio1Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio1Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1Parameters) DeepCopyInto(out *Virtio1Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio1CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio1DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio1PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1Parameters.
func (in *Virtio1Parameters) DeepCopy() *Virtio1Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1PassthroughInitParameters) DeepCopyInto(out *Virtio1PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1PassthroughInitParameters.
func (in *Virtio1PassthroughInitParameters) DeepCopy() *Virtio1PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1PassthroughObservation) DeepCopyInto(out *Virtio1PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1PassthroughObservation.
func (in *Virtio1PassthroughObservation) DeepCopy() *Virtio1PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio1PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio1PassthroughParameters) DeepCopyInto(out *Virtio1PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio1PassthroughParameters.
func (in *Virtio1PassthroughParameters) DeepCopy() *Virtio1PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio1PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2CdromInitParameters) DeepCopyInto(out *Virtio2CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2CdromInitParameters.
func (in *Virtio2CdromInitParameters) DeepCopy() *Virtio2CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2CdromObservation) DeepCopyInto(out *Virtio2CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2CdromObservation.
func (in *Virtio2CdromObservation) DeepCopy() *Virtio2CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2CdromParameters) DeepCopyInto(out *Virtio2CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2CdromParameters.
func (in *Virtio2CdromParameters) DeepCopy() *Virtio2CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2DiskInitParameters) DeepCopyInto(out *Virtio2DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2DiskInitParameters.
func (in *Virtio2DiskInitParameters) DeepCopy() *Virtio2DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2DiskObservation) DeepCopyInto(out *Virtio2DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2DiskObservation.
func (in *Virtio2DiskObservation) DeepCopy() *Virtio2DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2DiskParameters) DeepCopyInto(out *Virtio2DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2DiskParameters.
func (in *Virtio2DiskParameters) DeepCopy() *Virtio2DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2InitParameters) DeepCopyInto(out *Virtio2InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio2CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio2DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio2PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2InitParameters.
func (in *Virtio2InitParameters) DeepCopy() *Virtio2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2Observation) DeepCopyInto(out *Virtio2Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio2CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio2DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio2PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2Observation.
func (in *Virtio2Observation) DeepCopy() *Virtio2Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2Parameters) DeepCopyInto(out *Virtio2Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio2CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio2DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio2PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2Parameters.
func (in *Virtio2Parameters) DeepCopy() *Virtio2Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2PassthroughInitParameters) DeepCopyInto(out *Virtio2PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2PassthroughInitParameters.
func (in *Virtio2PassthroughInitParameters) DeepCopy() *Virtio2PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2PassthroughObservation) DeepCopyInto(out *Virtio2PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2PassthroughObservation.
func (in *Virtio2PassthroughObservation) DeepCopy() *Virtio2PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio2PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio2PassthroughParameters) DeepCopyInto(out *Virtio2PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio2PassthroughParameters.
func (in *Virtio2PassthroughParameters) DeepCopy() *Virtio2PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio2PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3CdromInitParameters) DeepCopyInto(out *Virtio3CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3CdromInitParameters.
func (in *Virtio3CdromInitParameters) DeepCopy() *Virtio3CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3CdromObservation) DeepCopyInto(out *Virtio3CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3CdromObservation.
func (in *Virtio3CdromObservation) DeepCopy() *Virtio3CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3CdromParameters) DeepCopyInto(out *Virtio3CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3CdromParameters.
func (in *Virtio3CdromParameters) DeepCopy() *Virtio3CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3DiskInitParameters) DeepCopyInto(out *Virtio3DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3DiskInitParameters.
func (in *Virtio3DiskInitParameters) DeepCopy() *Virtio3DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3DiskObservation) DeepCopyInto(out *Virtio3DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3DiskObservation.
func (in *Virtio3DiskObservation) DeepCopy() *Virtio3DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3DiskParameters) DeepCopyInto(out *Virtio3DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3DiskParameters.
func (in *Virtio3DiskParameters) DeepCopy() *Virtio3DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3InitParameters) DeepCopyInto(out *Virtio3InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio3CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio3DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio3PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3InitParameters.
func (in *Virtio3InitParameters) DeepCopy() *Virtio3InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3Observation) DeepCopyInto(out *Virtio3Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio3CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio3DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio3PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3Observation.
func (in *Virtio3Observation) DeepCopy() *Virtio3Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3Parameters) DeepCopyInto(out *Virtio3Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio3CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio3DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio3PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3Parameters.
func (in *Virtio3Parameters) DeepCopy() *Virtio3Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3PassthroughInitParameters) DeepCopyInto(out *Virtio3PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3PassthroughInitParameters.
func (in *Virtio3PassthroughInitParameters) DeepCopy() *Virtio3PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3PassthroughObservation) DeepCopyInto(out *Virtio3PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3PassthroughObservation.
func (in *Virtio3PassthroughObservation) DeepCopy() *Virtio3PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio3PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio3PassthroughParameters) DeepCopyInto(out *Virtio3PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio3PassthroughParameters.
func (in *Virtio3PassthroughParameters) DeepCopy() *Virtio3PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio3PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4CdromInitParameters) DeepCopyInto(out *Virtio4CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4CdromInitParameters.
func (in *Virtio4CdromInitParameters) DeepCopy() *Virtio4CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4CdromObservation) DeepCopyInto(out *Virtio4CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4CdromObservation.
func (in *Virtio4CdromObservation) DeepCopy() *Virtio4CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4CdromParameters) DeepCopyInto(out *Virtio4CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4CdromParameters.
func (in *Virtio4CdromParameters) DeepCopy() *Virtio4CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4DiskInitParameters) DeepCopyInto(out *Virtio4DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4DiskInitParameters.
func (in *Virtio4DiskInitParameters) DeepCopy() *Virtio4DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4DiskObservation) DeepCopyInto(out *Virtio4DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4DiskObservation.
func (in *Virtio4DiskObservation) DeepCopy() *Virtio4DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4DiskParameters) DeepCopyInto(out *Virtio4DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4DiskParameters.
func (in *Virtio4DiskParameters) DeepCopy() *Virtio4DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4InitParameters) DeepCopyInto(out *Virtio4InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio4CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio4DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio4PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4InitParameters.
func (in *Virtio4InitParameters) DeepCopy() *Virtio4InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4Observation) DeepCopyInto(out *Virtio4Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio4CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio4DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio4PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4Observation.
func (in *Virtio4Observation) DeepCopy() *Virtio4Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4Parameters) DeepCopyInto(out *Virtio4Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio4CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio4DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio4PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4Parameters.
func (in *Virtio4Parameters) DeepCopy() *Virtio4Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4PassthroughInitParameters) DeepCopyInto(out *Virtio4PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4PassthroughInitParameters.
func (in *Virtio4PassthroughInitParameters) DeepCopy() *Virtio4PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4PassthroughObservation) DeepCopyInto(out *Virtio4PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4PassthroughObservation.
func (in *Virtio4PassthroughObservation) DeepCopy() *Virtio4PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio4PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio4PassthroughParameters) DeepCopyInto(out *Virtio4PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio4PassthroughParameters.
func (in *Virtio4PassthroughParameters) DeepCopy() *Virtio4PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio4PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5CdromInitParameters) DeepCopyInto(out *Virtio5CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5CdromInitParameters.
func (in *Virtio5CdromInitParameters) DeepCopy() *Virtio5CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5CdromObservation) DeepCopyInto(out *Virtio5CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5CdromObservation.
func (in *Virtio5CdromObservation) DeepCopy() *Virtio5CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5CdromParameters) DeepCopyInto(out *Virtio5CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5CdromParameters.
func (in *Virtio5CdromParameters) DeepCopy() *Virtio5CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5DiskInitParameters) DeepCopyInto(out *Virtio5DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5DiskInitParameters.
func (in *Virtio5DiskInitParameters) DeepCopy() *Virtio5DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5DiskObservation) DeepCopyInto(out *Virtio5DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5DiskObservation.
func (in *Virtio5DiskObservation) DeepCopy() *Virtio5DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5DiskParameters) DeepCopyInto(out *Virtio5DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5DiskParameters.
func (in *Virtio5DiskParameters) DeepCopy() *Virtio5DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5InitParameters) DeepCopyInto(out *Virtio5InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio5CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio5DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio5PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5InitParameters.
func (in *Virtio5InitParameters) DeepCopy() *Virtio5InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5Observation) DeepCopyInto(out *Virtio5Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio5CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio5DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio5PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5Observation.
func (in *Virtio5Observation) DeepCopy() *Virtio5Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio5Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5Parameters) DeepCopyInto(out *Virtio5Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio5CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio5DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio5PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5Parameters.
func (in *Virtio5Parameters) DeepCopy() *Virtio5Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5PassthroughInitParameters) DeepCopyInto(out *Virtio5PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5PassthroughInitParameters.
func (in *Virtio5PassthroughInitParameters) DeepCopy() *Virtio5PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5PassthroughObservation) DeepCopyInto(out *Virtio5PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5PassthroughObservation.
func (in *Virtio5PassthroughObservation) DeepCopy() *Virtio5PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio5PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio5PassthroughParameters) DeepCopyInto(out *Virtio5PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio5PassthroughParameters.
func (in *Virtio5PassthroughParameters) DeepCopy() *Virtio5PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio5PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6CdromInitParameters) DeepCopyInto(out *Virtio6CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6CdromInitParameters.
func (in *Virtio6CdromInitParameters) DeepCopy() *Virtio6CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6CdromObservation) DeepCopyInto(out *Virtio6CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6CdromObservation.
func (in *Virtio6CdromObservation) DeepCopy() *Virtio6CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6CdromParameters) DeepCopyInto(out *Virtio6CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6CdromParameters.
func (in *Virtio6CdromParameters) DeepCopy() *Virtio6CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6DiskInitParameters) DeepCopyInto(out *Virtio6DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6DiskInitParameters.
func (in *Virtio6DiskInitParameters) DeepCopy() *Virtio6DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6DiskObservation) DeepCopyInto(out *Virtio6DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6DiskObservation.
func (in *Virtio6DiskObservation) DeepCopy() *Virtio6DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6DiskParameters) DeepCopyInto(out *Virtio6DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6DiskParameters.
func (in *Virtio6DiskParameters) DeepCopy() *Virtio6DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6InitParameters) DeepCopyInto(out *Virtio6InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio6CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio6DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio6PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6InitParameters.
func (in *Virtio6InitParameters) DeepCopy() *Virtio6InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6Observation) DeepCopyInto(out *Virtio6Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio6CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio6DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio6PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6Observation.
func (in *Virtio6Observation) DeepCopy() *Virtio6Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6Parameters) DeepCopyInto(out *Virtio6Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio6CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio6DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio6PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6Parameters.
func (in *Virtio6Parameters) DeepCopy() *Virtio6Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6PassthroughInitParameters) DeepCopyInto(out *Virtio6PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6PassthroughInitParameters.
func (in *Virtio6PassthroughInitParameters) DeepCopy() *Virtio6PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6PassthroughObservation) DeepCopyInto(out *Virtio6PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6PassthroughObservation.
func (in *Virtio6PassthroughObservation) DeepCopy() *Virtio6PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio6PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio6PassthroughParameters) DeepCopyInto(out *Virtio6PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio6PassthroughParameters.
func (in *Virtio6PassthroughParameters) DeepCopy() *Virtio6PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio6PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7CdromInitParameters) DeepCopyInto(out *Virtio7CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7CdromInitParameters.
func (in *Virtio7CdromInitParameters) DeepCopy() *Virtio7CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7CdromObservation) DeepCopyInto(out *Virtio7CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7CdromObservation.
func (in *Virtio7CdromObservation) DeepCopy() *Virtio7CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7CdromParameters) DeepCopyInto(out *Virtio7CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7CdromParameters.
func (in *Virtio7CdromParameters) DeepCopy() *Virtio7CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7DiskInitParameters) DeepCopyInto(out *Virtio7DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7DiskInitParameters.
func (in *Virtio7DiskInitParameters) DeepCopy() *Virtio7DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7DiskObservation) DeepCopyInto(out *Virtio7DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7DiskObservation.
func (in *Virtio7DiskObservation) DeepCopy() *Virtio7DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7DiskParameters) DeepCopyInto(out *Virtio7DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7DiskParameters.
func (in *Virtio7DiskParameters) DeepCopy() *Virtio7DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7InitParameters) DeepCopyInto(out *Virtio7InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio7CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio7DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio7PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7InitParameters.
func (in *Virtio7InitParameters) DeepCopy() *Virtio7InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7Observation) DeepCopyInto(out *Virtio7Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio7CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio7DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio7PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7Observation.
func (in *Virtio7Observation) DeepCopy() *Virtio7Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio7Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7Parameters) DeepCopyInto(out *Virtio7Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio7CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio7DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio7PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7Parameters.
func (in *Virtio7Parameters) DeepCopy() *Virtio7Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7PassthroughInitParameters) DeepCopyInto(out *Virtio7PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7PassthroughInitParameters.
func (in *Virtio7PassthroughInitParameters) DeepCopy() *Virtio7PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7PassthroughObservation) DeepCopyInto(out *Virtio7PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7PassthroughObservation.
func (in *Virtio7PassthroughObservation) DeepCopy() *Virtio7PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio7PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio7PassthroughParameters) DeepCopyInto(out *Virtio7PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio7PassthroughParameters.
func (in *Virtio7PassthroughParameters) DeepCopy() *Virtio7PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio7PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8CdromInitParameters) DeepCopyInto(out *Virtio8CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8CdromInitParameters.
func (in *Virtio8CdromInitParameters) DeepCopy() *Virtio8CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8CdromObservation) DeepCopyInto(out *Virtio8CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8CdromObservation.
func (in *Virtio8CdromObservation) DeepCopy() *Virtio8CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8CdromParameters) DeepCopyInto(out *Virtio8CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8CdromParameters.
func (in *Virtio8CdromParameters) DeepCopy() *Virtio8CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8DiskInitParameters) DeepCopyInto(out *Virtio8DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8DiskInitParameters.
func (in *Virtio8DiskInitParameters) DeepCopy() *Virtio8DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8DiskObservation) DeepCopyInto(out *Virtio8DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8DiskObservation.
func (in *Virtio8DiskObservation) DeepCopy() *Virtio8DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8DiskParameters) DeepCopyInto(out *Virtio8DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8DiskParameters.
func (in *Virtio8DiskParameters) DeepCopy() *Virtio8DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8InitParameters) DeepCopyInto(out *Virtio8InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio8CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio8DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio8PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8InitParameters.
func (in *Virtio8InitParameters) DeepCopy() *Virtio8InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8Observation) DeepCopyInto(out *Virtio8Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio8CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio8DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio8PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8Observation.
func (in *Virtio8Observation) DeepCopy() *Virtio8Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio8Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8Parameters) DeepCopyInto(out *Virtio8Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio8CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio8DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio8PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8Parameters.
func (in *Virtio8Parameters) DeepCopy() *Virtio8Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8PassthroughInitParameters) DeepCopyInto(out *Virtio8PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8PassthroughInitParameters.
func (in *Virtio8PassthroughInitParameters) DeepCopy() *Virtio8PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8PassthroughObservation) DeepCopyInto(out *Virtio8PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8PassthroughObservation.
func (in *Virtio8PassthroughObservation) DeepCopy() *Virtio8PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio8PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio8PassthroughParameters) DeepCopyInto(out *Virtio8PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio8PassthroughParameters.
func (in *Virtio8PassthroughParameters) DeepCopy() *Virtio8PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio8PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9CdromInitParameters) DeepCopyInto(out *Virtio9CdromInitParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9CdromInitParameters.
func (in *Virtio9CdromInitParameters) DeepCopy() *Virtio9CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9CdromObservation) DeepCopyInto(out *Virtio9CdromObservation) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9CdromObservation.
func (in *Virtio9CdromObservation) DeepCopy() *Virtio9CdromObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9CdromParameters) DeepCopyInto(out *Virtio9CdromParameters) {
	*out = *in
	if in.Iso != nil {
		in, out := &in.Iso, &out.Iso
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9CdromParameters.
func (in *Virtio9CdromParameters) DeepCopy() *Virtio9CdromParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9DiskInitParameters) DeepCopyInto(out *Virtio9DiskInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9DiskInitParameters.
func (in *Virtio9DiskInitParameters) DeepCopy() *Virtio9DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9DiskObservation) DeepCopyInto(out *Virtio9DiskObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.LinkedDiskID != nil {
		in, out := &in.LinkedDiskID, &out.LinkedDiskID
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9DiskObservation.
func (in *Virtio9DiskObservation) DeepCopy() *Virtio9DiskObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9DiskParameters) DeepCopyInto(out *Virtio9DiskParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9DiskParameters.
func (in *Virtio9DiskParameters) DeepCopy() *Virtio9DiskParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9InitParameters) DeepCopyInto(out *Virtio9InitParameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio9CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio9DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio9PassthroughInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9InitParameters.
func (in *Virtio9InitParameters) DeepCopy() *Virtio9InitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9Observation) DeepCopyInto(out *Virtio9Observation) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio9CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio9DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio9PassthroughObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9Observation.
func (in *Virtio9Observation) DeepCopy() *Virtio9Observation {
	if in == nil {
		return nil
	}
	out := new(Virtio9Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9Parameters) DeepCopyInto(out *Virtio9Parameters) {
	*out = *in
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]Virtio9CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]Virtio9DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = make([]Virtio9PassthroughParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9Parameters.
func (in *Virtio9Parameters) DeepCopy() *Virtio9Parameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9PassthroughInitParameters) DeepCopyInto(out *Virtio9PassthroughInitParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9PassthroughInitParameters.
func (in *Virtio9PassthroughInitParameters) DeepCopy() *Virtio9PassthroughInitParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9PassthroughInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9PassthroughObservation) DeepCopyInto(out *Virtio9PassthroughObservation) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9PassthroughObservation.
func (in *Virtio9PassthroughObservation) DeepCopy() *Virtio9PassthroughObservation {
	if in == nil {
		return nil
	}
	out := new(Virtio9PassthroughObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Virtio9PassthroughParameters) DeepCopyInto(out *Virtio9PassthroughParameters) {
	*out = *in
	if in.Asyncio != nil {
		in, out := &in.Asyncio, &out.Asyncio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.IopsRBurst != nil {
		in, out := &in.IopsRBurst, &out.IopsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsRBurstLength != nil {
		in, out := &in.IopsRBurstLength, &out.IopsRBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsRConcurrent != nil {
		in, out := &in.IopsRConcurrent, &out.IopsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurst != nil {
		in, out := &in.IopsWrBurst, &out.IopsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrBurstLength != nil {
		in, out := &in.IopsWrBurstLength, &out.IopsWrBurstLength
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrConcurrent != nil {
		in, out := &in.IopsWrConcurrent, &out.IopsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.MbpsRBurst != nil {
		in, out := &in.MbpsRBurst, &out.MbpsRBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsRConcurrent != nil {
		in, out := &in.MbpsRConcurrent, &out.MbpsRConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrBurst != nil {
		in, out := &in.MbpsWrBurst, &out.MbpsWrBurst
		*out = new(float64)
		**out = **in
	}
	if in.MbpsWrConcurrent != nil {
		in, out := &in.MbpsWrConcurrent, &out.MbpsWrConcurrent
		*out = new(float64)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Wwn != nil {
		in, out := &in.Wwn, &out.Wwn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Virtio9PassthroughParameters.
func (in *Virtio9PassthroughParameters) DeepCopy() *Virtio9PassthroughParameters {
	if in == nil {
		return nil
	}
	out := new(Virtio9PassthroughParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtioInitParameters) DeepCopyInto(out *VirtioInitParameters) {
	*out = *in
	if in.Virtio0 != nil {
		in, out := &in.Virtio0, &out.Virtio0
		*out = make([]Virtio0InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio1 != nil {
		in, out := &in.Virtio1, &out.Virtio1
		*out = make([]Virtio1InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio10 != nil {
		in, out := &in.Virtio10, &out.Virtio10
		*out = make([]Virtio10InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio11 != nil {
		in, out := &in.Virtio11, &out.Virtio11
		*out = make([]Virtio11InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio12 != nil {
		in, out := &in.Virtio12, &out.Virtio12
		*out = make([]Virtio12InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio13 != nil {
		in, out := &in.Virtio13, &out.Virtio13
		*out = make([]Virtio13InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio14 != nil {
		in, out := &in.Virtio14, &out.Virtio14
		*out = make([]Virtio14InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio15 != nil {
		in, out := &in.Virtio15, &out.Virtio15
		*out = make([]Virtio15InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio2 != nil {
		in, out := &in.Virtio2, &out.Virtio2
		*out = make([]Virtio2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio3 != nil {
		in, out := &in.Virtio3, &out.Virtio3
		*out = make([]Virtio3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio4 != nil {
		in, out := &in.Virtio4, &out.Virtio4
		*out = make([]Virtio4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio5 != nil {
		in, out := &in.Virtio5, &out.Virtio5
		*out = make([]Virtio5InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio6 != nil {
		in, out := &in.Virtio6, &out.Virtio6
		*out = make([]Virtio6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio7 != nil {
		in, out := &in.Virtio7, &out.Virtio7
		*out = make([]Virtio7InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio8 != nil {
		in, out := &in.Virtio8, &out.Virtio8
		*out = make([]Virtio8InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio9 != nil {
		in, out := &in.Virtio9, &out.Virtio9
		*out = make([]Virtio9InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtioInitParameters.
func (in *VirtioInitParameters) DeepCopy() *VirtioInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtioInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtioObservation) DeepCopyInto(out *VirtioObservation) {
	*out = *in
	if in.Virtio0 != nil {
		in, out := &in.Virtio0, &out.Virtio0
		*out = make([]Virtio0Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio1 != nil {
		in, out := &in.Virtio1, &out.Virtio1
		*out = make([]Virtio1Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio10 != nil {
		in, out := &in.Virtio10, &out.Virtio10
		*out = make([]Virtio10Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio11 != nil {
		in, out := &in.Virtio11, &out.Virtio11
		*out = make([]Virtio11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio12 != nil {
		in, out := &in.Virtio12, &out.Virtio12
		*out = make([]Virtio12Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio13 != nil {
		in, out := &in.Virtio13, &out.Virtio13
		*out = make([]Virtio13Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio14 != nil {
		in, out := &in.Virtio14, &out.Virtio14
		*out = make([]Virtio14Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio15 != nil {
		in, out := &in.Virtio15, &out.Virtio15
		*out = make([]Virtio15Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio2 != nil {
		in, out := &in.Virtio2, &out.Virtio2
		*out = make([]Virtio2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio3 != nil {
		in, out := &in.Virtio3, &out.Virtio3
		*out = make([]Virtio3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio4 != nil {
		in, out := &in.Virtio4, &out.Virtio4
		*out = make([]Virtio4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio5 != nil {
		in, out := &in.Virtio5, &out.Virtio5
		*out = make([]Virtio5Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio6 != nil {
		in, out := &in.Virtio6, &out.Virtio6
		*out = make([]Virtio6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio7 != nil {
		in, out := &in.Virtio7, &out.Virtio7
		*out = make([]Virtio7Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio8 != nil {
		in, out := &in.Virtio8, &out.Virtio8
		*out = make([]Virtio8Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio9 != nil {
		in, out := &in.Virtio9, &out.Virtio9
		*out = make([]Virtio9Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtioObservation.
func (in *VirtioObservation) DeepCopy() *VirtioObservation {
	if in == nil {
		return nil
	}
	out := new(VirtioObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtioParameters) DeepCopyInto(out *VirtioParameters) {
	*out = *in
	if in.Virtio0 != nil {
		in, out := &in.Virtio0, &out.Virtio0
		*out = make([]Virtio0Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio1 != nil {
		in, out := &in.Virtio1, &out.Virtio1
		*out = make([]Virtio1Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio10 != nil {
		in, out := &in.Virtio10, &out.Virtio10
		*out = make([]Virtio10Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio11 != nil {
		in, out := &in.Virtio11, &out.Virtio11
		*out = make([]Virtio11Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio12 != nil {
		in, out := &in.Virtio12, &out.Virtio12
		*out = make([]Virtio12Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio13 != nil {
		in, out := &in.Virtio13, &out.Virtio13
		*out = make([]Virtio13Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio14 != nil {
		in, out := &in.Virtio14, &out.Virtio14
		*out = make([]Virtio14Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio15 != nil {
		in, out := &in.Virtio15, &out.Virtio15
		*out = make([]Virtio15Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio2 != nil {
		in, out := &in.Virtio2, &out.Virtio2
		*out = make([]Virtio2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio3 != nil {
		in, out := &in.Virtio3, &out.Virtio3
		*out = make([]Virtio3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio4 != nil {
		in, out := &in.Virtio4, &out.Virtio4
		*out = make([]Virtio4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio5 != nil {
		in, out := &in.Virtio5, &out.Virtio5
		*out = make([]Virtio5Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio6 != nil {
		in, out := &in.Virtio6, &out.Virtio6
		*out = make([]Virtio6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio7 != nil {
		in, out := &in.Virtio7, &out.Virtio7
		*out = make([]Virtio7Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio8 != nil {
		in, out := &in.Virtio8, &out.Virtio8
		*out = make([]Virtio8Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtio9 != nil {
		in, out := &in.Virtio9, &out.Virtio9
		*out = make([]Virtio9Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtioParameters.
func (in *VirtioParameters) DeepCopy() *VirtioParameters {
	if in == nil {
		return nil
	}
	out := new(VirtioParameters)
	in.DeepCopyInto(out)
	return out
}
