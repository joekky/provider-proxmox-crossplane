name: Build and Push AMD64 Artifacts

on:
  push:
    branches: ['main', 'master', 'release-*', 'method1-local-generated']
    tags: ['v*']

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_VERSION: "1.5.7"
      TERRAFORM_PROVIDER_SOURCE: "registry.terraform.io/joekky/proxmox"
      TERRAFORM_PROVIDER_VERSION: "0.1.0"
      TERRAFORM_PROVIDER_REPO: "https://github.com/joekky/terraform-provider-proxmox"
      IMAGE_NAME: "ghcr.io/${{ github.repository }}/provider-proxmox-amd64:${{ github.ref_name }}"
      BUILD_REGISTRY: "ghcr.io/${{ github.repository }}"
      SKIP_GENERATE: "true"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build Terraform Provider
        run: |
          git clone --depth 1 ${{ env.TERRAFORM_PROVIDER_REPO }} /tmp/terraform-provider
          cd /tmp/terraform-provider
          go mod download
          go build -v -o terraform-provider-proxmox
          mkdir -p $(go env GOPATH)/bin
          mv terraform-provider-proxmox $(go env GOPATH)/bin/
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          ls -l $(go env GOPATH)/bin/terraform-provider-proxmox

      - name: Build Provider Binary
        run: make build SKIP_GENERATE=true

      - name: Build AMD64 Docker Image
        run: |
          ARCH=amd64 OS=linux make img.build SKIP_GENERATE=true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image to GHCR
        run: |
          docker push ${{ env.IMAGE_NAME }}

      - name: Build AMD64 XPKG
        run: |
          ARCH=amd64 OS=linux make xpkg.build

      - name: Publish XPKG as GitHub Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./path/to/amd64-xpkg
          asset_name: provider-proxmox-amd64.xpkg
          asset_content_type: application/octet-stream