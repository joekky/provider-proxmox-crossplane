name: Build and Push Multi-arch Artifacts

on:
  push:
    branches: ['main', 'master', 'release-*']
    tags: ['v*']

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    permissions:
      contents: read
      packages: write

    env:
      TERRAFORM_VERSION: "1.5.7"
      TERRAFORM_PROVIDER_SOURCE: "registry.terraform.io/joekky/proxmox"
      TERRAFORM_PROVIDER_VERSION: "0.1.0"
      BUILD_REGISTRY: "ghcr.io/${{ github.repository }}"
      ARCH: "${{ matrix.arch }}"
      VERSION: "${{ github.ref_name }}"
      IMAGE_NAME: "ghcr.io/${{ github.repository }}/provider-proxmox-crossplane-${{ matrix.arch }}"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build Provider Binary
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} make build SKIP_GENERATE=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          TARGETOS=linux TARGETARCH=${{ matrix.arch }} make image.build SKIP_GENERATE=true
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker tag "${IMAGE_NAME}:${VERSION}" "${IMAGE_NAME}:latest"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}"

      - name: Install Crossplane CLI
        run: |
          curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh
          sudo mv crossplane /usr/local/bin/
          chmod +x /usr/local/bin/crossplane

      - name: Build XPKG
        run: |
          make xpkg.build.${{ matrix.arch }} SKIP_GENERATE=true
