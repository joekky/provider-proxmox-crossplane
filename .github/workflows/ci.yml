name: Build and Push Provider

on:
  push:
    tags: ['v*']
    branches: ['main', 'master', 'release-*']
  pull_request:
    branches: ['main', 'master', 'release-*']

env:
  TERRAFORM_VERSION: "1.5.7"
  TERRAFORM_PROVIDER_SOURCE: "registry.terraform.io/joekky/proxmox"
  TERRAFORM_PROVIDER_VERSION: "0.1.0"
  TERRAFORM_PROVIDER_REPO: "https://github.com/joekky/terraform-provider-proxmox"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Important for build submodule
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # Build Terraform Provider from source
      - name: Build Terraform Provider
        run: |
          git clone --depth 1 ${{ env.TERRAFORM_PROVIDER_REPO }} /tmp/terraform-provider
          cd /tmp/terraform-provider
          go mod download
          go build -v -o terraform-provider-proxmox
          mkdir -p $(go env GOPATH)/bin
          mv terraform-provider-proxmox $(go env GOPATH)/bin/
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          ls -l $(go env GOPATH)/bin/terraform-provider-proxmox

      - name: Setup Build Environment
        run: |
          make submodules
          make build.init
          
      - name: Generate Provider Code
        run: |
          echo "Current directory: $(pwd)"
          echo "Terraform version: $(terraform version)"
          echo "Provider binary location: $(which terraform-provider-proxmox)"
          
          make -d generate.init
          make VERBOSE=1 generate

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build both architecture binaries
      - name: Build Provider Binaries
        run: |
          ARCH=amd64 OS=linux make build
          ARCH=arm64 OS=linux make build

      # Build and push the four artifacts to GHCR
      - name: Push Artifacts to GHCR
        if: github.event_name != 'pull_request'
        run: |
          # Push AMD64 Docker image
          ARCH=amd64 OS=linux make img.build
          docker tag $(BUILD_REGISTRY)/provider-proxmox-crossplane-amd64 ghcr.io/${{ github.repository }}/provider-proxmox-amd64:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/provider-proxmox-amd64:${{ github.ref_name }}
          
          # Push ARM64 Docker image
          ARCH=arm64 OS=linux make img.build
          docker tag $(BUILD_REGISTRY)/provider-proxmox-crossplane-arm64 ghcr.io/${{ github.repository }}/provider-proxmox-arm64:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/provider-proxmox-arm64:${{ github.ref_name }}
          
          # Push AMD64 XPKG
          XPKG_REG_ORGS=ghcr.io/${{ github.repository }} ARCH=amd64 OS=linux make xpkg.build
          XPKG_REG_ORGS=ghcr.io/${{ github.repository }} make xpkg.publish
          
          # Push ARM64 XPKG
          XPKG_REG_ORGS=ghcr.io/${{ github.repository }} ARCH=arm64 OS=linux make xpkg.build
          XPKG_REG_ORGS=ghcr.io/${{ github.repository }} make xpkg.publish