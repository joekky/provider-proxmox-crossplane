name: Build and Push Multi-arch Artifacts

on:
  push:
    branches: ['main', 'master', 'release-*', 'method1-local-generated']
    tags: ['v*']

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    permissions:
      contents: read
      packages: write

    env:
      BUILD_REGISTRY: "ghcr.io/${{ github.repository }}"
      ARCH: "${{ matrix.arch }}"
      VERSION: "${{ github.ref_name }}"
      IMAGE_NAME: "ghcr.io/${{ github.repository }}/provider-proxmox-crossplane-${{ matrix.arch }}"
      REGISTRY_IMAGE: "ghcr.io/${{ github.repository }}/provider-proxmox-crossplane-${{ matrix.arch }}"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Crossplane CLI
        run: |
          curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh
          sudo mv crossplane /usr/local/bin/
          chmod +x /usr/local/bin/crossplane
          crossplane version

      - name: Install xpkg
        run: |
          go install github.com/crossplane/crossplane-tools/cmd/xpkg@latest
          sudo mv $GOPATH/bin/xpkg /usr/local/bin/
          chmod +x /usr/local/bin/xpkg
          xpkg version

      - name: Verify xpkg Installation
        run: |
          if ! command -v xpkg &> /dev/null; then
            echo "xpkg could not be found"
            exit 1
          fi
          xpkg version

      - name: Build Provider Binary
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/bin/linux_${{ matrix.arch }}
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o ${GITHUB_WORKSPACE}/bin/linux_${{ matrix.arch }}/provider ./cmd/provider

      - name: Build XPKG
        run: |
          make xpkg.build.${{ matrix.arch }} SKIP_GENERATE=true

      - name: Update crossplane.yaml
        run: |
          export VERSION=${{ env.VERSION }}
          export REGISTRY_IMAGE=${{ env.IMAGE_NAME }}
          envsubst < package/crossplane.yaml > package/crossplane.yaml.tmp
          mv package/crossplane.yaml.tmp package/crossplane.yaml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cluster/images/provider-proxmox-crossplane/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: |
            TARGETOS=linux
            TARGETARCH=${{ matrix.arch }}
